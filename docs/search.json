[{"path":"/articles/01-Pathway_analysis.html","id":"differential-information","dir":"Articles","previous_headings":"","what":"Differential Information","title":"Extended pathway analysis","text":"case study Liao et al. (2022) integrated metabolic transcriptional analysis reveal elevated pyrimidine metabolism glutaminolysis TNBC among 31 breast tumors, classified two clusters. utilize MNet identify set features whose activities significantly differ two clusters. result hopefully hint specific biological activities pathologically altered tumoral samples.","code":"library(MNet) library(dplyr) library(cowplot) library(clusterProfiler) library(org.Hs.eg.db) library(pathview) library(ggplot2)  ## meta_dat is the metabolic data of the 31 samples ## gene_dat is the transcriptional data of the 31 samples ## group is the group information of the 31 samples  ## mlimma is the function of Differential Metabolite analysis by limma  diff_meta <- mlimma(meta_dat,group) diff_gene <- mlimma(gene_dat,group)"},{"path":"/articles/01-Pathway_analysis.html","id":"pathway-enrichment-analysis","dir":"Articles","previous_headings":"","what":"Pathway enrichment analysis","title":"Extended pathway analysis","text":"Pathway enrichment analysis, includes gene pathway enrichment analysis focusing genes, metabolite pathway enrichment analysis focusing metabolites extended pathway enrichment analysis focusing genes metabolites, using function “PathwayAnalysis” MNet.","code":""},{"path":"/articles/01-Pathway_analysis.html","id":"extended-pathway-enrichment-analysis-epea","dir":"Articles","previous_headings":"Pathway enrichment analysis","what":"Extended pathway enrichment analysis (ePEA)","title":"Extended pathway analysis","text":"Function ‘PathwayAnalysis’ ‘Extended’ parameter, investigates metabolic pathway dysregulation considering metabolites genes, refer ePEA.","code":"## combine the metabolite information and gene information  all_dat <- rbind(diff_gene,diff_meta)  ## filter the increase differential genes and metabolites all_dat1 <- all_dat %>%   dplyr::filter(logFC>0.58) %>%   dplyr::filter(adj.P.Val < 0.05)  ## the increase pathway analysis of both genes and metabolites result1 <- PathwayAnalysis(all_dat1$name,out=\"Extended\",p_cutoff=0.01)  ## filter the decrease differential genes and metabolites all_dat2 <- all_dat %>%   dplyr::filter(logFC < -0.58) %>%   dplyr::filter(adj.P.Val < 0.05)  result2 <- PathwayAnalysis(all_dat2$name,out=\"Extended\",p_cutoff=0.01)  p <- cowplot::plot_grid(plotlist = list(result1$p_barplot,result2$p_barplot)) result1$gp result2$gp"},{"path":"/articles/01-Pathway_analysis.html","id":"metabolite-pathway-enrichment-analysis-mpea","dir":"Articles","previous_headings":"Pathway enrichment analysis","what":"Metabolite pathway enrichment analysis (mPEA)","title":"Extended pathway analysis","text":"Function ‘PathwayAnalysis’ ‘metabolite’ parameter, investigates metabolic pathway dysregulation considering metabolites, refer mPEA.","code":"all_dat <- diff_meta  all_dat1 <- all_dat %>%   dplyr::filter(logFC>0.58) %>%   dplyr::filter(adj.P.Val < 0.05)  result1 <- PathwayAnalysis(all_dat1$name,out=\"metabolite\",p_cutoff=0.1)  all_dat2 <- all_dat %>%   dplyr::filter(logFC < -0.58) %>%   dplyr::filter(adj.P.Val < 0.05)  result2 <- PathwayAnalysis(all_dat2$name,out=\"metabolite\",p_cutoff=0.1)  p <- cowplot::plot_grid(plotlist = list(result1$p_barplot,result2$p_barplot)) result1$gp result2$gp"},{"path":"/articles/01-Pathway_analysis.html","id":"gene-pathway-enrichment-analysis-gpea","dir":"Articles","previous_headings":"Pathway enrichment analysis","what":"Gene pathway enrichment analysis (gPEA)","title":"Extended pathway analysis","text":"Function ‘PathwayAnalysis’ ‘gene’ parameter, investigates metabolic pathway dysregulation considering genes, refer gPEA.","code":"all_dat <- diff_gene  all_dat1 <- all_dat %>%   dplyr::filter(logFC>0.58) %>%   dplyr::filter(adj.P.Val < 0.05)  result1 <- PathwayAnalysis(all_dat1$name,out=\"gene\",p_cutoff=0.1)   all_dat2 <- all_dat %>%   dplyr::filter(logFC < -0.58) %>%   dplyr::filter(adj.P.Val < 0.05)  result2 <- PathwayAnalysis(all_dat2$name,out=\"gene\",p_cutoff=0.1)  p <- cowplot::plot_grid(plotlist = list(result1$p_barplot,result2$p_barplot)) result1$gp result2$gp"},{"path":"/articles/01-Pathway_analysis.html","id":"pathway-differential-abundance-analysis","dir":"Articles","previous_headings":"","what":"Pathway differential abundance analysis","title":"Extended pathway analysis","text":"Pathway differential abundance analysis, includes gene pathway differential abundance analysis focusing genes, metabolite pathway differential abundance analysis focusing metabolites extended pathway differential abundance analysis focusing genes metabolites, using function “DAscore” MNet.","code":""},{"path":"/articles/01-Pathway_analysis.html","id":"extended-pathway-differential-abundance-score-epda","dir":"Articles","previous_headings":"Pathway differential abundance analysis","what":"Extended pathway differential abundance score (ePDA)","title":"Extended pathway analysis","text":"Function ‘DAscore’ ‘Extended’ parameter, investigates metabolic pathway dysregulation considering metabolites genes, refer ePDA (extended pathway differential abundance).","code":"diff_gene_increase <-  diff_gene %>%   dplyr::filter(logFC>0.58) %>%   dplyr::filter(adj.P.Val < 0.05) diff_gene_decrease <- diff_gene %>%   dplyr::filter(logFC < -0.58) %>%   dplyr::filter(adj.P.Val < 0.05)  diff_meta_increase <- diff_meta %>%   dplyr::filter(logFC>0.58) %>%   dplyr::filter(adj.P.Val < 0.05)  diff_meta_decrease <- diff_meta %>%   dplyr::filter(logFC < -0.58) %>%   dplyr::filter(adj.P.Val < 0.05)   ExtendDAscore_result <- DAscore(c(diff_gene_increase$name,diff_meta_increase$name),c(diff_gene_decrease$name,diff_meta_decrease$name),c(diff_gene$name,diff_meta$name),min_measured_num = 2,out=\"Extended\")"},{"path":"/articles/01-Pathway_analysis.html","id":"metabolite-pathway-differential-abundance-score-mpda","dir":"Articles","previous_headings":"Pathway differential abundance analysis","what":"Metabolite pathway differential abundance score (mPDA)","title":"Extended pathway analysis","text":"Function ‘DAscore’ ‘metabolite’ parameter, investigates metabolic pathway dysregulation considering metabolites, refer mPDA (metabolite pathway differential abundance).","code":"diff_meta_increase <- diff_meta %>%   dplyr::filter(logFC > 0.58) %>%   dplyr::filter(adj.P.Val < 0.05)  diff_meta_decrease <- diff_meta %>%   dplyr::filter(logFC < -0.58) %>%   dplyr::filter(adj.P.Val < 0.05) dascore_result_meta <- DAscore(diff_meta_increase$name,diff_meta_decrease$name,diff_meta$name,out=\"metabolite\")"},{"path":"/articles/01-Pathway_analysis.html","id":"gene-pathway-differential-abundance-score-gpda","dir":"Articles","previous_headings":"Pathway differential abundance analysis","what":"Gene pathway differential abundance score (gPDA)","title":"Extended pathway analysis","text":"Function ‘DAscore’ ‘gene’ parameter, investigates metabolic pathway dysregulation considering genes, refer gPDA (gene pathway differential abundance).","code":"diff_gene_increase <- diff_gene %>%   dplyr::filter(logFC > 0.58) %>%   dplyr::filter(adj.P.Val < 0.05)  diff_gene_decrease <- diff_gene %>%   dplyr::filter(logFC < -0.58) %>%   dplyr::filter(adj.P.Val < 0.05) dascore_result_gene <- DAscore(diff_gene_increase$name,diff_gene_decrease$name,diff_gene$name,out=\"gene\")"},{"path":"/articles/01-Pathway_analysis.html","id":"pathway-set-enrichment-analysis","dir":"Articles","previous_headings":"","what":"Pathway set enrichment analysis","title":"Extended pathway analysis","text":"Pathway set enrichment analysis, includes gene set enrichment analysis focusing genes, metabolite set enrichment analysis focusing metabolites extended pathway set enrichment analysis focusing genes metabolites, using function “ESEA” MNet.","code":""},{"path":"/articles/01-Pathway_analysis.html","id":"extended-pathway-set-enrichment-analysis-esea","dir":"Articles","previous_headings":"Pathway set enrichment analysis","what":"Extended pathway set enrichment analysis (eSEA)","title":"Extended pathway analysis","text":"Extended pathway set enrichment analysis includes genes metabolites eSEA plot interested pathway includes genes metabolites eSEA plot Butanoate metabolism","code":"gene_symbol <- clusterProfiler::bitr(rownames(gse16873.d),fromType =\"ENTREZID\",toType=\"SYMBOL\",OrgDb = org.Hs.eg.db) dat <- gse16873.d %>%   as.data.frame() %>%   tibble::rownames_to_column(var=\"ENTREZID\") %>%   dplyr::inner_join(gene_symbol,by=\"ENTREZID\") gene.data <- dat$DCIS_1 names(gene.data) <- dat$SYMBOL  dat <- c(sim.cpd.data,gene.data) result <- ESEA(dat,out=\"Extended\") result$leadingEdge <- as.character(result$leadingEdge) p <- pESEA(\"Butanoate metabolism\",dat,out=\"Extended\")"},{"path":"/articles/01-Pathway_analysis.html","id":"metabolite-set-enrichment-analysis-msea","dir":"Articles","previous_headings":"Pathway set enrichment analysis","what":"Metabolite set enrichment analysis (mSEA)","title":"Extended pathway analysis","text":"Metabolite set enrichment analysis includes metabolites mSEA plot interested pathway includes metabolites mSEA plot Butanoate metabolism","code":"result <- ESEA(sim.cpd.data,out=\"metabolite\") result$leadingEdge <- as.character(result$leadingEdge) p <- pESEA(\"Butanoate metabolism\",sim.cpd.data,out=\"metabolite\")"},{"path":"/articles/01-Pathway_analysis.html","id":"gene-set-enrichment-analysis-gsea","dir":"Articles","previous_headings":"Pathway set enrichment analysis","what":"Gene set enrichment analysis (gSEA)","title":"Extended pathway analysis","text":"Gene set enrichment analysis includes genes gSEA plot interested pathway includes genes gSEA plot Butanoate metabolism","code":"result <- ESEA(gene.data,out=\"gene\") result$leadingEdge <- as.character(result$leadingEdge) p <- pESEA(\"Butanoate metabolism\",gene.data,out=\"gene\")"},{"path":"/articles/02-Subnetwork_analysis.html","id":"differential-information","dir":"Articles","previous_headings":"","what":"Differential Information","title":"Metabolism-related subnetwork analysis","text":"case study Liao et al. (2022) integrated metabolic transcriptional analysis reveal elevated pyrimidine metabolism glutaminolysis TNBC among 31 breast tumors, classified two clusters. utilize MNet identify set features whose activities significantly differ two clusters. result hopefully hint specific biological activities pathologically altered tumoral samples.","code":"library(MNet) library(dplyr)  ## meta_dat is the metabolic data of the 31 samples ## gene_dat is the transcriptional data of the 31 samples ## group is the group information of the 31 samples  ## mlimma is the function of Differential Metabolite analysis by limma  diff_meta <- mlimma(meta_dat,group) diff_gene <- mlimma(gene_dat,group)"},{"path":"/articles/02-Subnetwork_analysis.html","id":"subnetwork-identified-by-dnet","dir":"Articles","previous_headings":"","what":"Subnetwork identified by dnet","title":"Metabolism-related subnetwork analysis","text":"Input data must include “name” column, “p_value” required “logFC” optional. “logFC” exists, dictates color; otherwise, use blue metabolites red genes.","code":"names(diff_meta)[4]  <- \"p_value\" diff_metabolite <- diff_meta %>%   dplyr::filter(adj.P.Val < 0.01) %>%   dplyr::filter(abs(logFC)>1)  names(diff_gene)[4] <- \"p_value\" diff_gene1 <- diff_gene %>%   dplyr::filter(adj.P.Val < 0.01) %>%   dplyr::filter(abs(logFC)>1)  dir.create(\"result_v0131\") png(\"result_v0131/subnetwork_important.png\",width = 8, height = 7, units = 'in', res = 200) a <- pdnet(diff_meta,diff_gene,nsize=100) dev.off() write.table(a$node_result,\"result_v0131/subnetwork_important_node.txt\",quote=F,row.names=F,sep=\"\\t\") write.table(a$edge_result,\"result_v0131/subnetwork_important_edge.txt\",quote=F,row.names=F,sep=\"\\t\")"},{"path":"/articles/02-Subnetwork_analysis.html","id":"subnetwork-extraction-of-interested-metabolites-and-genes","dir":"Articles","previous_headings":"","what":"Subnetwork extraction of interested metabolites and genes","title":"Metabolism-related subnetwork analysis","text":"Input data requires “name” column excludes “p_value” column.","code":"png(\"result_v0131/subnetwork_interested.png\",width = 8, height = 7, units = 'in', res = 200)  ## get 500 differential expression gene a <- pdnet(diff_metabolite[,8],diff_gene1[1:500,8]) dev.off() write.table(a,\"result_v0131/subnetwork_interested_edge.txt\",quote=F,row.names=F,sep=\"\\t\")"},{"path":"/articles/02-Subnetwork_analysis.html","id":"subnetwork-extraction-using-correlation","dir":"Articles","previous_headings":"","what":"Subnetwork extraction using correlation","title":"Metabolism-related subnetwork analysis","text":"","code":"png(\"result_v0131/subnetwork_correlation.png\",width = 8, height = 7, units = 'in', res = 200) a <- pNetCor(meta_dat,gene_dat,cor_threshold=0.95) dev.off() write.table(a$result,\"result_v0131/subnetwork_correlation.txt\",quote=F,row.names=F,sep=\"\\t\")"},{"path":[]},{"path":"/articles/03-Routine_analyses.html","id":"metabolite-compound-name-transform-to-refmet-name","dir":"Articles","previous_headings":"Metabolite compound name transformation","what":"Metabolite compound name transform to RefMet name","title":"Rountine analysis","text":"step requires networking RefMet: Reference list Metabolite names.main objective RefMet provide standardized reference nomenclature discrete metabolite structures metabolite species identified spectroscopic techniques metabolomics experiments.","code":"library(MNet) library(dplyr) library(tibble) library(survival)  compound_name <- c(\"2-Hydroxybutyric acid\",\"1-Methyladenosine\",\"tt\",\"2-Aminooctanoic acid\") refmetid_result <- name2refmet(compound_name) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union ##              Input name           refmet_name    formula exactmass ## 1     1-Methyladenosine     1-Methyladenosine C11H15N5O4  281.1124 ## 2 2-Hydroxybutyric acid 2-Hydroxybutyric acid     C4H8O3  104.0473 ## 3                    tt                    tt       <NA>        NA ## 4  2-Aminooctanoic acid  2-Aminooctanoic acid   C8H17NO2  159.1259 ##     super_class               main_class              sub_class class_index ## 1 Nucleic acids                  Purines Purine ribonucleosides        1330 ## 2   Fatty Acyls              Fatty acids             Hydroxy FA         125 ## 3          <NA>                     <NA>                   <NA>          NA ## 4 Organic acids Amino acids and peptides            Amino acids          NA"},{"path":"/articles/03-Routine_analyses.html","id":"metabolite-compound-name-transform-to-kegg-id","dir":"Articles","previous_headings":"Metabolite compound name transformation","what":"Metabolite compound name transform to KEGG ID","title":"Rountine analysis","text":"step requires networking Transform metabolites compound name KEGG ID","code":"compound_name <- c(\"2-Hydroxybutyric acid\",\"1-Methyladenosine\",\"tt\",\"2-Aminooctanoic acid\") keggid_result <- name2keggid(compound_name) %>%   tidyr::separate_rows(KEGG_id,sep=\";\") %>%   tibble::as_tibble() ##                    name kegg_id ## 1 2-Hydroxybutyric acid  C05984 ## 2     1-Methyladenosine  C02494 ## 3                    tt    <NA> ## 4  2-Aminooctanoic acid    <NA>"},{"path":"/articles/03-Routine_analyses.html","id":"metabolite-name-corresponding-to-kegg-pathway","dir":"Articles","previous_headings":"Metabolite compound name transformation","what":"Metabolite name corresponding to kegg pathway","title":"Rountine analysis","text":"step requires networking Search kegg pathway corresponding metabolite name","code":"compound_name <- c(\"2-Hydroxybutyric acid\",\"1-Methyladenosine\",\"tt\",\"2-Aminooctanoic acid\") result_all <- name2pathway(compound_name)  ##### Output is the each metabolite related pathway result_name2pathway <- result_all$name2pathway result_name2keggid <- result_all$kegg_id result_name2enrichpathway <- result_all$pathway ##                    name kegg_id               PATHWAY pathwayid ## 1 2-Hydroxybutyric acid  C05984 Propanoate metabolism  hsa00640 ##                    name kegg_id ## 1 2-Hydroxybutyric acid  C05984 ## 2     1-Methyladenosine  C02494 ## 3                    tt    <NA> ## 4  2-Aminooctanoic acid    <NA> ##                    name nAnno nOverlap   fc zscore pvalue adjp  or  CIl CIu ## 1 Propanoate metabolism    40        1 76.1   8.66  0.013    1 Inf 1.93 Inf ##   distance  namespace members_Overlap ## 1        1 Customised          C05984 ##                                                                                                                                                                                                                                                                                                                     members_Anno ## 1 C00024, C00042, C00068, C00083, C00091, C00099, C00100, C00109, C00111, C00163, C00186, C00222, C00424, C00479, C00546, C00583, C00683, C00804, C00827, C00894, C01013, C01213, C02170, C02225, C02335, C02876, C04225, C04593, C05235, C05668, C05979, C05983, C05984, C05989, C06002, C15972, C15973, C21017, C21018, C21250 ##    members_Overlap_name ## 1 2-Hydroxybutyric acidmembers_Anno_name ## 1 Acetyl-CoA;Succinate;Thiamin diphosphate;Malonyl-CoA;Succinyl-CoA;beta-Alanine;Propanoyl-CoA;2-Oxobutanoate;Glycerone phosphate;Propanoate;(S)-Lactate;3-Oxopropanoate;(S)-Lactaldehyde;Propanal;Methylglyoxal;Propane-1,2-diol;(S)-Methylmalonyl-CoA;Propynoate;Lactoyl-CoA;Propenoyl-CoA;3-Hydroxypropanoate;(R)-Methylmalonyl-CoA;Methylmalonate;2-Methylcitrate;beta-Alanyl-CoA;Propanoyl phosphate;(Z)-But-2-ene-1,2,3-tricarboxylate;(2S,3R)-3-Hydroxybutane-1,2,3-tricarboxylate;Hydroxyacetone;3-Hydroxypropionyl-CoA;Propane-1-ol;Propionyladenylate;2-Hydroxybutyric acid;3-Oxopropionyl-CoA;(S)-Methylmalonate semialdehyde;Enzyme N6-(lipoyl)lysine;Enzyme N6-(dihydrolipoyl)lysine;2-(alpha-Hydroxypropyl)thiamine diphosphate;Enzyme N6-(S-propyldihydrolipoyl)lysine;2-Methyl-trans-aconitate"},{"path":"/articles/03-Routine_analyses.html","id":"metabolite-kegg-id-transform-to-kegg-pathway","dir":"Articles","previous_headings":"Metabolite compound name transformation","what":"Metabolite KEGG ID transform to KEGG pathway","title":"Rountine analysis","text":"KEGG ID transform KEGG pathway","code":"library(MNet) ## Warning: replacing previous import 'igraph::diversity' by 'vegan::diversity' ## when loading 'MNet' keggid <- c(\"C05984\",\"C02494\") ##### the output is the each metabolite related pathway keggpathway_result <- keggid2pathway(keggid) head(keggpathway_result) ## # A tibble: 1 × 5 ##   ENTRY  NAME                                         PATHWAY pathway_type V2    ##   <chr>  <chr>                                        <chr>   <chr>        <chr> ## 1 C05984 2-Hydroxybutanoic acid;///2-Hydroxybutyrate… Propan… Carbohydrat… hsa0…"},{"path":"/articles/03-Routine_analyses.html","id":"pathway-information","dir":"Articles","previous_headings":"Metabolite compound name transformation","what":"Pathway information","title":"Rountine analysis","text":"Get gene metabolite pathway","code":"library(MNet) result <- pathwayinfo(\"hsa00630\") result <- pathwayinfo(\"Glyoxylate and dicarboxylate metabolism\") result$gene_info[1:2,] ##   type  name kegg_pathwayid                        kegg_pathwayname ## 1 gene ACSS1       hsa00630 Glyoxylate and dicarboxylate metabolism ## 2 gene ACSS2       hsa00630 Glyoxylate and dicarboxylate metabolism ##             kegg_category ## 1 Carbohydrate metabolism ## 2 Carbohydrate metabolism result$compound_info[1:2,] ##         type   name kegg_pathwayid                        kegg_pathwayname ## 1 metabolite C00007       hsa00630 Glyoxylate and dicarboxylate metabolism ## 2 metabolite C00011       hsa00630 Glyoxylate and dicarboxylate metabolism ##             kegg_category ## 1 Carbohydrate metabolism ## 2 Carbohydrate metabolism"},{"path":"/articles/03-Routine_analyses.html","id":"pathway-name-transform-to-pathway-id","dir":"Articles","previous_headings":"Metabolite compound name transformation","what":"Pathway name transform to pathway id","title":"Rountine analysis","text":"Transform KEGG pathway name KEGG pathway ID","code":"library(MNet) pathwayid <- pathway2pathwayid(\"Glycolysis / Gluconeogenesis\") pathwayid ##                        PATHWAY pathwayid ## 1 Glycolysis / Gluconeogenesis  hsa00010"},{"path":[]},{"path":"/articles/03-Routine_analyses.html","id":"pca-plot","dir":"Articles","previous_headings":"Group-wise analyses","what":"PCA plot","title":"Rountine analysis","text":"PCA data","code":"### the pca plot p_PCA <- pPCA(meta_dat,group)"},{"path":[]},{"path":"/articles/03-Routine_analyses.html","id":"function-mlimma","dir":"Articles","previous_headings":"Group-wise analyses > Differnetial metabolite analysis","what":"Function ‘mlimma’","title":"Rountine analysis","text":"","code":"diff_result <- mlimma(meta_dat,group)"},{"path":"/articles/03-Routine_analyses.html","id":"function-dm","dir":"Articles","previous_headings":"Group-wise analyses > Differnetial metabolite analysis","what":"Function ‘DM’","title":"Rountine analysis","text":"","code":"diff_result <- DM(2**meta_dat,group)  ## filter the differential metabolites by default fold change >1.5 or < 1/1.5 ,fdr < 0.05 and VIP>1  diff_result_filter <- diff_result %>%   dplyr::filter(Fold_change >1.3 | Fold_change < 1/1.3) %>%   dplyr::filter(Padj_wilcox < 0.1) %>%   dplyr::filter(VIP>0.8)"},{"path":"/articles/03-Routine_analyses.html","id":"differential-metabolites-volcano","dir":"Articles","previous_headings":"Group-wise analyses","what":"Differential metabolites’ volcano","title":"Rountine analysis","text":"Volcano plot metabolites using function “pVolcano”","code":"p_volcano <- pVolcano(diff_result,foldchange_threshold=1.5)"},{"path":"/articles/03-Routine_analyses.html","id":"differential-metabolites-heatmap","dir":"Articles","previous_headings":"Group-wise analyses","what":"Differential metabolites’ heatmap","title":"Rountine analysis","text":"Heatmap plot differentital metabolites using function “pHeatmap”","code":"meta_dat_diff <- meta_dat[rownames(meta_dat) %in% diff_result_filter$Name,] p_heatmap <- pHeatmap(meta_dat_diff,group,fontsize_row=5,fontsize_col=4,clustering_method=\"ward.D\",clustering_distance_cols=\"correlation\")"},{"path":"/articles/03-Routine_analyses.html","id":"differential-metabolites-zscore","dir":"Articles","previous_headings":"Group-wise analyses","what":"Differential metabolites’ zscore","title":"Rountine analysis","text":"Zscore plot differentital metabolites using function “pZscore”","code":"p_zscore <- pZscore(meta_dat_diff,group,ysize=3) #p_zscore"},{"path":[]},{"path":"/articles/03-Routine_analyses.html","id":"boruta","dir":"Articles","previous_headings":"Feature selection","what":"Boruta","title":"Rountine analysis","text":"Using machine learning “Boruta” feature selection","code":"#group <- rep(\"normal\",length(names(meta_dat))) #group[grep(\"TUMOR\",names(meta_dat))] <- \"tumor\" meta_dat1 <- t(meta_dat) %>%   as.data.frame() %>%   dplyr::mutate(group=group)  result_ML_Boruta <- ML_Boruta(meta_dat1)"},{"path":"/articles/03-Routine_analyses.html","id":"random-forest","dir":"Articles","previous_headings":"Feature selection","what":"Random Forest","title":"Rountine analysis","text":"Using machine learning “Random Forest” feature selection","code":"result_ML_RF <- ML_RF(meta_dat1) result_ML_RF$p result_ML_RF$feature_result"},{"path":"/articles/03-Routine_analyses.html","id":"xgboost","dir":"Articles","previous_headings":"Feature selection","what":"XGBoost","title":"Rountine analysis","text":"Using machine learning ” XGBoost” feature selection","code":"result_ML_xgboost <- ML_xgboost(meta_dat1) result_ML_xgboost$p result_ML_xgboost$feature_result"},{"path":"/articles/03-Routine_analyses.html","id":"lasso","dir":"Articles","previous_headings":"Feature selection","what":"LASSO","title":"Rountine analysis","text":"Using machine learning “LASSO” feature selection","code":"result_ML_lasso <- ML_alpha(meta_dat1,method=\"lasso\")"},{"path":"/articles/03-Routine_analyses.html","id":"elastic-network","dir":"Articles","previous_headings":"Feature selection","what":"elastic network","title":"Rountine analysis","text":"Using machine learning “elastic network” feature selection","code":"result_ML_elastic <- ML_alpha(meta_dat1,method=\"elastic\")"},{"path":[]},{"path":"/articles/03-Routine_analyses.html","id":"pathview-only-metabolites","dir":"Articles","previous_headings":"Pathway analysis","what":"Pathview only metabolites","title":"Rountine analysis","text":"","code":"kegg_id <- c(\"C02494\",\"C03665\",\"C01546\",\"C05984\",\"C14088\",\"C00587\") value <- c(-0.3824620,0.1823628,-1.1681486,0.5164899,1.6449798,-0.7340652) names(value) <- kegg_id cpd.data <- value  gene_name <- c(\"LDHA\",\"BCKDHB\",\"PCCA\",\"ACSS1\") gene_value <- c(1,0.5,-1,-1) names(gene_value) <- gene_name  pPathview(cpd.data,outdir=\"result_v0131\")"},{"path":"/articles/03-Routine_analyses.html","id":"pathview-contains-metabolites-and-genes","dir":"Articles","previous_headings":"Pathway analysis","what":"Pathview contains metabolites and genes","title":"Rountine analysis","text":"","code":"pPathview(cpd.data=cpd.data,gene.data=gene_value,outdir=\"result_v0131\")"},{"path":[]},{"path":"/articles/03-Routine_analyses.html","id":"time-series-of-clinical","dir":"Articles","previous_headings":"Clinical analysis","what":"Time series of clinical","title":"Rountine analysis","text":"Column contains time, group, clinical index(ALT), low high","code":"clinical_index[1:5,] time_series_ALT <- pCliTS(clinical_index,\"ALT\") ggsave(\"result_v0131/clinical_time_series.png\",time_series_ALT,width=5,height = 4)"},{"path":"/articles/03-Routine_analyses.html","id":"survival-analysis","dir":"Articles","previous_headings":"Clinical analysis","what":"Survival analysis","title":"Rountine analysis","text":"","code":"names(aml)[3] =\"group\" p=survCli(aml) png(\"result_v0131/survival.png\") p dev.off()"},{"path":"/articles/03-Routine_analyses.html","id":"metabolites-survival-plot","dir":"Articles","previous_headings":"Clinical analysis","what":"Metabolites’ survival plot","title":"Rountine analysis","text":"","code":"metabolites <- c(\"C03819\",\"C02918\",\"C03916\") survMet(dat_surv,metabolites,cluster_method=\"mean\",out_dir=\"result_v0131/survival/\")"},{"path":"/articles/03-Routine_analyses.html","id":"cox-analysis","dir":"Articles","previous_headings":"Clinical analysis","what":"Cox analysis","title":"Rountine analysis","text":"","code":"result <- MetCox(dat_surv)"},{"path":"/articles/03-Routine_analyses.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Rountine analysis","text":"","code":"sessionInfo() ## R version 4.2.1 (2022-06-23) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Catalina 10.15.6 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] MNet_1.0.0  dplyr_1.1.1 ##  ## loaded via a namespace (and not attached): ##  [1] tidyselect_1.2.0    xfun_0.38           bslib_0.4.2         ##  [4] purrr_1.0.1         splines_4.2.1       lattice_0.21-8      ##  [7] colorspace_2.1-0    vctrs_0.6.1         generics_0.1.3      ## [10] htmltools_0.5.5     mgcv_1.8-42         yaml_2.3.7          ## [13] utf8_1.2.3          rlang_1.1.0         e1071_1.7-13        ## [16] pkgdown_2.0.7       jquerylib_0.1.4     pillar_1.9.0        ## [19] withr_2.5.0         glue_1.6.2          BiocGenerics_0.42.0 ## [22] lifecycle_1.0.3     stringr_1.5.0       munsell_0.5.0       ## [25] gtable_0.3.3        ragg_1.2.5          memoise_2.0.1       ## [28] evaluate_0.20       Biobase_2.56.0      knitr_1.42          ## [31] permute_0.9-7       fastmap_1.1.1       parallel_4.2.1      ## [34] class_7.3-21        fansi_1.0.4         scales_1.2.1        ## [37] cachem_1.0.7        vegan_2.6-4         desc_1.4.2          ## [40] jsonlite_1.8.4      systemfonts_1.0.4   fs_1.6.1            ## [43] textshaping_0.3.6   ggplot2_3.4.2       digest_0.6.31       ## [46] stringi_1.7.12      bookdown_0.33       rprojroot_2.0.3     ## [49] grid_4.2.1          cli_3.6.1           tools_4.2.1         ## [52] magrittr_2.0.3      sass_0.4.5          proxy_0.4-27        ## [55] tibble_3.2.1        cluster_2.1.4       pkgconfig_2.0.3     ## [58] Matrix_1.5-4        MASS_7.3-58.3       data.table_1.14.8   ## [61] rmarkdown_2.21      rstudioapi_0.14     R6_2.5.1            ## [64] nlme_3.1-162        igraph_1.4.2        compiler_4.2.1"},{"path":[]},{"path":"/articles/03-Routine_analysis.html","id":"metabolite-compound-name-transform-to-refmet-name","dir":"Articles","previous_headings":"Metabolite compound name transformation","what":"Metabolite compound name transform to RefMet name","title":"Rountine analysis","text":"step requires networking RefMet: Reference list Metabolite names.main objective RefMet provide standardized reference nomenclature discrete metabolite structures metabolite species identified spectroscopic techniques metabolomics experiments.","code":"library(MNet) library(dplyr) library(tibble) library(survival)  compound_name <- c(\"2-Hydroxybutyric acid\",\"1-Methyladenosine\",\"tt\",\"2-Aminooctanoic acid\") refmetid_result <- name2refmet(compound_name) ##  ## Attaching package: 'dplyr' ## The following objects are masked from 'package:stats': ##  ##     filter, lag ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union ##              Input name           refmet_name    formula exactmass ## 1     1-Methyladenosine     1-Methyladenosine C11H15N5O4  281.1124 ## 2 2-Hydroxybutyric acid 2-Hydroxybutyric acid     C4H8O3  104.0473 ## 3                    tt                    tt       <NA>        NA ## 4  2-Aminooctanoic acid  2-Aminooctanoic acid   C8H17NO2  159.1259 ##     super_class               main_class              sub_class class_index ## 1 Nucleic acids                  Purines Purine ribonucleosides        1330 ## 2   Fatty Acyls              Fatty acids             Hydroxy FA         125 ## 3          <NA>                     <NA>                   <NA>          NA ## 4 Organic acids Amino acids and peptides            Amino acids          NA"},{"path":"/articles/03-Routine_analysis.html","id":"metabolite-compound-name-transform-to-kegg-id","dir":"Articles","previous_headings":"Metabolite compound name transformation","what":"Metabolite compound name transform to KEGG ID","title":"Rountine analysis","text":"step requires networking Transform metabolites compound name KEGG ID","code":"compound_name <- c(\"2-Hydroxybutyric acid\",\"1-Methyladenosine\",\"tt\",\"2-Aminooctanoic acid\") keggid_result <- name2keggid(compound_name) %>%   tidyr::separate_rows(KEGG_id,sep=\";\") %>%   tibble::as_tibble() ##                    name kegg_id ## 1 2-Hydroxybutyric acid  C05984 ## 2     1-Methyladenosine  C02494 ## 3                    tt    <NA> ## 4  2-Aminooctanoic acid    <NA>"},{"path":"/articles/03-Routine_analysis.html","id":"metabolite-name-corresponding-to-kegg-pathway","dir":"Articles","previous_headings":"Metabolite compound name transformation","what":"Metabolite name corresponding to kegg pathway","title":"Rountine analysis","text":"step requires networking Search kegg pathway corresponding metabolite name","code":"compound_name <- c(\"2-Hydroxybutyric acid\",\"1-Methyladenosine\",\"tt\",\"2-Aminooctanoic acid\") result_all <- name2pathway(compound_name)  ##### Output is the each metabolite related pathway result_name2pathway <- result_all$name2pathway result_name2keggid <- result_all$kegg_id result_name2enrichpathway <- result_all$pathway ##                    name kegg_id               PATHWAY pathwayid ## 1 2-Hydroxybutyric acid  C05984 Propanoate metabolism  hsa00640 ##                    name kegg_id ## 1 2-Hydroxybutyric acid  C05984 ## 2     1-Methyladenosine  C02494 ## 3                    tt    <NA> ## 4  2-Aminooctanoic acid    <NA> ##                    name nAnno nOverlap   fc zscore pvalue adjp  or  CIl CIu ## 1 Propanoate metabolism    40        1 76.1   8.66  0.013    1 Inf 1.93 Inf ##   distance  namespace members_Overlap ## 1        1 Customised          C05984 ##                                                                                                                                                                                                                                                                                                                     members_Anno ## 1 C00024, C00042, C00068, C00083, C00091, C00099, C00100, C00109, C00111, C00163, C00186, C00222, C00424, C00479, C00546, C00583, C00683, C00804, C00827, C00894, C01013, C01213, C02170, C02225, C02335, C02876, C04225, C04593, C05235, C05668, C05979, C05983, C05984, C05989, C06002, C15972, C15973, C21017, C21018, C21250 ##    members_Overlap_name ## 1 2-Hydroxybutyric acidmembers_Anno_name ## 1 Acetyl-CoA;Succinate;Thiamin diphosphate;Malonyl-CoA;Succinyl-CoA;beta-Alanine;Propanoyl-CoA;2-Oxobutanoate;Glycerone phosphate;Propanoate;(S)-Lactate;3-Oxopropanoate;(S)-Lactaldehyde;Propanal;Methylglyoxal;Propane-1,2-diol;(S)-Methylmalonyl-CoA;Propynoate;Lactoyl-CoA;Propenoyl-CoA;3-Hydroxypropanoate;(R)-Methylmalonyl-CoA;Methylmalonate;2-Methylcitrate;beta-Alanyl-CoA;Propanoyl phosphate;(Z)-But-2-ene-1,2,3-tricarboxylate;(2S,3R)-3-Hydroxybutane-1,2,3-tricarboxylate;Hydroxyacetone;3-Hydroxypropionyl-CoA;Propane-1-ol;Propionyladenylate;2-Hydroxybutyric acid;3-Oxopropionyl-CoA;(S)-Methylmalonate semialdehyde;Enzyme N6-(lipoyl)lysine;Enzyme N6-(dihydrolipoyl)lysine;2-(alpha-Hydroxypropyl)thiamine diphosphate;Enzyme N6-(S-propyldihydrolipoyl)lysine;2-Methyl-trans-aconitate"},{"path":"/articles/03-Routine_analysis.html","id":"metabolite-kegg-id-transform-to-kegg-pathway","dir":"Articles","previous_headings":"Metabolite compound name transformation","what":"Metabolite KEGG ID transform to KEGG pathway","title":"Rountine analysis","text":"KEGG ID transform KEGG pathway","code":"library(MNet) ## Warning: replacing previous import 'igraph::diversity' by 'vegan::diversity' ## when loading 'MNet' keggid <- c(\"C05984\",\"C02494\") ##### the output is the each metabolite related pathway keggpathway_result <- keggid2pathway(keggid) head(keggpathway_result) ## # A tibble: 1 × 5 ##   ENTRY  NAME                                         PATHWAY pathway_type V2    ##   <chr>  <chr>                                        <chr>   <chr>        <chr> ## 1 C05984 2-Hydroxybutanoic acid;///2-Hydroxybutyrate… Propan… Carbohydrat… hsa0…"},{"path":"/articles/03-Routine_analysis.html","id":"pathway-information","dir":"Articles","previous_headings":"Metabolite compound name transformation","what":"Pathway information","title":"Rountine analysis","text":"Get gene metabolite pathway","code":"library(MNet) result <- pathwayinfo(\"hsa00630\") result <- pathwayinfo(\"Glyoxylate and dicarboxylate metabolism\") result$gene_info[1:2,] ##   type  name kegg_pathwayid                        kegg_pathwayname ## 1 gene ACSS1       hsa00630 Glyoxylate and dicarboxylate metabolism ## 2 gene ACSS2       hsa00630 Glyoxylate and dicarboxylate metabolism ##             kegg_category ## 1 Carbohydrate metabolism ## 2 Carbohydrate metabolism result$compound_info[1:2,] ##         type   name kegg_pathwayid                        kegg_pathwayname ## 1 metabolite C00007       hsa00630 Glyoxylate and dicarboxylate metabolism ## 2 metabolite C00011       hsa00630 Glyoxylate and dicarboxylate metabolism ##             kegg_category ## 1 Carbohydrate metabolism ## 2 Carbohydrate metabolism"},{"path":"/articles/03-Routine_analysis.html","id":"pathway-name-transform-to-pathway-id","dir":"Articles","previous_headings":"Metabolite compound name transformation","what":"Pathway name transform to pathway id","title":"Rountine analysis","text":"Transform KEGG pathway name KEGG pathway ID","code":"library(MNet) pathwayid <- pathway2pathwayid(\"Glycolysis / Gluconeogenesis\") pathwayid ##                        PATHWAY pathwayid ## 1 Glycolysis / Gluconeogenesis  hsa00010"},{"path":[]},{"path":"/articles/03-Routine_analysis.html","id":"pca-plot","dir":"Articles","previous_headings":"Group-wise analyses","what":"PCA plot","title":"Rountine analysis","text":"PCA data","code":"### the pca plot p_PCA <- pPCA(meta_dat,group)"},{"path":[]},{"path":"/articles/03-Routine_analysis.html","id":"function-mlimma","dir":"Articles","previous_headings":"Group-wise analyses > Differnetial metabolite analysis","what":"Function ‘mlimma’","title":"Rountine analysis","text":"","code":"diff_result <- mlimma(meta_dat,group)"},{"path":"/articles/03-Routine_analysis.html","id":"function-dm","dir":"Articles","previous_headings":"Group-wise analyses > Differnetial metabolite analysis","what":"Function ‘DM’","title":"Rountine analysis","text":"","code":"diff_result <- DM(2**meta_dat,group)  ## filter the differential metabolites by default fold change >1.5 or < 1/1.5 ,fdr < 0.05 and VIP>1  diff_result_filter <- diff_result %>%   dplyr::filter(Fold_change >1.3 | Fold_change < 1/1.3) %>%   dplyr::filter(Padj_wilcox < 0.1) %>%   dplyr::filter(VIP>0.8)"},{"path":"/articles/03-Routine_analysis.html","id":"differential-metabolites-volcano","dir":"Articles","previous_headings":"Group-wise analyses","what":"Differential metabolites’ volcano","title":"Rountine analysis","text":"Volcano plot metabolites using function “pVolcano”","code":"p_volcano <- pVolcano(diff_result,foldchange_threshold=1.5)"},{"path":"/articles/03-Routine_analysis.html","id":"differential-metabolites-heatmap","dir":"Articles","previous_headings":"Group-wise analyses","what":"Differential metabolites’ heatmap","title":"Rountine analysis","text":"Heatmap plot differentital metabolites using function “pHeatmap”","code":"meta_dat_diff <- meta_dat[rownames(meta_dat) %in% diff_result_filter$Name,] p_heatmap <- pHeatmap(meta_dat_diff,group,fontsize_row=5,fontsize_col=4,clustering_method=\"ward.D\",clustering_distance_cols=\"correlation\")"},{"path":"/articles/03-Routine_analysis.html","id":"differential-metabolites-zscore","dir":"Articles","previous_headings":"Group-wise analyses","what":"Differential metabolites’ zscore","title":"Rountine analysis","text":"Zscore plot differentital metabolites using function “pZscore”","code":"p_zscore <- pZscore(meta_dat_diff,group,ysize=3) #p_zscore"},{"path":[]},{"path":"/articles/03-Routine_analysis.html","id":"boruta","dir":"Articles","previous_headings":"Feature selection","what":"Boruta","title":"Rountine analysis","text":"Using machine learning “Boruta” feature selection","code":"#group <- rep(\"normal\",length(names(meta_dat))) #group[grep(\"TUMOR\",names(meta_dat))] <- \"tumor\" meta_dat1 <- t(meta_dat) %>%   as.data.frame() %>%   dplyr::mutate(group=group)  result_ML_Boruta <- ML_Boruta(meta_dat1)"},{"path":"/articles/03-Routine_analysis.html","id":"random-forest","dir":"Articles","previous_headings":"Feature selection","what":"Random Forest","title":"Rountine analysis","text":"Using machine learning “Random Forest” feature selection","code":"result_ML_RF <- ML_RF(meta_dat1) result_ML_RF$p result_ML_RF$feature_result"},{"path":"/articles/03-Routine_analysis.html","id":"xgboost","dir":"Articles","previous_headings":"Feature selection","what":"XGBoost","title":"Rountine analysis","text":"Using machine learning ” XGBoost” feature selection","code":"result_ML_xgboost <- ML_xgboost(meta_dat1) result_ML_xgboost$p result_ML_xgboost$feature_result"},{"path":"/articles/03-Routine_analysis.html","id":"lasso","dir":"Articles","previous_headings":"Feature selection","what":"LASSO","title":"Rountine analysis","text":"Using machine learning “LASSO” feature selection","code":"result_ML_lasso <- ML_alpha(meta_dat1,method=\"lasso\")"},{"path":"/articles/03-Routine_analysis.html","id":"elastic-network","dir":"Articles","previous_headings":"Feature selection","what":"elastic network","title":"Rountine analysis","text":"Using machine learning “elastic network” feature selection","code":"result_ML_elastic <- ML_alpha(meta_dat1,method=\"elastic\")"},{"path":[]},{"path":"/articles/03-Routine_analysis.html","id":"pathview-only-metabolites","dir":"Articles","previous_headings":"Pathway analysis","what":"Pathview only metabolites","title":"Rountine analysis","text":"","code":"kegg_id <- c(\"C02494\",\"C03665\",\"C01546\",\"C05984\",\"C14088\",\"C00587\") value <- c(-0.3824620,0.1823628,-1.1681486,0.5164899,1.6449798,-0.7340652) names(value) <- kegg_id cpd.data <- value  gene_name <- c(\"LDHA\",\"BCKDHB\",\"PCCA\",\"ACSS1\") gene_value <- c(1,0.5,-1,-1) names(gene_value) <- gene_name  pPathview(cpd.data,outdir=\"result_v0131\")"},{"path":"/articles/03-Routine_analysis.html","id":"pathview-contains-metabolites-and-genes","dir":"Articles","previous_headings":"Pathway analysis","what":"Pathview contains metabolites and genes","title":"Rountine analysis","text":"","code":"pPathview(cpd.data=cpd.data,gene.data=gene_value,outdir=\"result_v0131\")"},{"path":[]},{"path":"/articles/03-Routine_analysis.html","id":"time-series-of-clinical","dir":"Articles","previous_headings":"Clinical analysis","what":"Time series of clinical","title":"Rountine analysis","text":"Column contains time, group, clinical index(ALT), low high","code":"clinical_index[1:5,] time_series_ALT <- pCliTS(clinical_index,\"ALT\") ggsave(\"result_v0131/clinical_time_series.png\",time_series_ALT,width=5,height = 4)"},{"path":"/articles/03-Routine_analysis.html","id":"survival-analysis","dir":"Articles","previous_headings":"Clinical analysis","what":"Survival analysis","title":"Rountine analysis","text":"","code":"names(aml)[3] =\"group\" p=survCli(aml) png(\"result_v0131/survival.png\") p dev.off()"},{"path":"/articles/03-Routine_analysis.html","id":"metabolites-survival-plot","dir":"Articles","previous_headings":"Clinical analysis","what":"Metabolites’ survival plot","title":"Rountine analysis","text":"","code":"metabolites <- c(\"C03819\",\"C02918\",\"C03916\") survMet(dat_surv,metabolites,cluster_method=\"mean\",out_dir=\"result_v0131/survival/\")"},{"path":"/articles/03-Routine_analysis.html","id":"cox-analysis","dir":"Articles","previous_headings":"Clinical analysis","what":"Cox analysis","title":"Rountine analysis","text":"","code":"result <- MetCox(dat_surv)"},{"path":"/articles/03-Routine_analysis.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Rountine analysis","text":"","code":"sessionInfo() ## R version 4.2.1 (2022-06-23) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Catalina 10.15.6 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] survival_3.5-5            tibble_3.2.1              ##  [3] pathview_1.36.1           org.Hs.eg.db_3.15.0       ##  [5] AnnotationDbi_1.58.0      IRanges_2.30.1            ##  [7] S4Vectors_0.34.0          Biobase_2.56.0            ##  [9] BiocGenerics_0.42.0       clusterProfiler_4.7.1.003 ## [11] RColorBrewer_1.1-3        ggplot2_3.4.2             ## [13] stringr_1.5.0             MNet_1.0.0                ## [15] dplyr_1.1.1               ##  ## loaded via a namespace (and not attached): ##   [1] shadowtext_0.1.2       fastmatch_1.1-3        systemfonts_1.0.4      ##   [4] plyr_1.8.8             igraph_1.4.2           lazyeval_0.2.2         ##   [7] splines_4.2.1          BiocParallel_1.30.4    GenomeInfoDb_1.32.4    ##  [10] digest_0.6.31          yulab.utils_0.0.6      htmltools_0.5.5        ##  [13] GOSemSim_2.25.0        viridis_0.6.2          GO.db_3.15.0           ##  [16] fansi_1.0.4            magrittr_2.0.3         memoise_2.0.1          ##  [19] cluster_2.1.4          Biostrings_2.64.1      graphlayouts_0.8.4     ##  [22] pkgdown_2.0.7          enrichplot_1.16.2      colorspace_2.1-0       ##  [25] blob_1.2.4             ggrepel_0.9.3          textshaping_0.3.6      ##  [28] xfun_0.38              crayon_1.5.2           RCurl_1.98-1.12        ##  [31] jsonlite_1.8.4         graph_1.74.0           scatterpie_0.1.8       ##  [34] ape_5.7-1              glue_1.6.2             polyclip_1.10-4        ##  [37] gtable_0.3.3           zlibbioc_1.42.0        XVector_0.36.0         ##  [40] Rgraphviz_2.40.0       scales_1.2.1           DOSE_3.25.0.002        ##  [43] DBI_1.1.3              Rcpp_1.0.10            viridisLite_0.4.1      ##  [46] gridGraphics_0.5-1     tidytree_0.4.2         bit_4.0.5              ##  [49] proxy_0.4-27           httr_1.4.5             fgsea_1.22.0           ##  [52] pkgconfig_2.0.3        XML_3.99-0.14          farver_2.1.1           ##  [55] sass_0.4.5             utf8_1.2.3             ggplotify_0.1.0        ##  [58] tidyselect_1.2.0       rlang_1.1.0            reshape2_1.4.4         ##  [61] munsell_0.5.0          tools_4.2.1            cachem_1.0.7           ##  [64] downloader_0.4         cli_3.6.1              generics_0.1.3         ##  [67] RSQLite_2.3.1          gson_0.1.0             evaluate_0.20          ##  [70] fastmap_1.1.1          yaml_2.3.7             ragg_1.2.5             ##  [73] ggtree_3.4.4           knitr_1.42             bit64_4.0.5            ##  [76] fs_1.6.1               tidygraph_1.2.3        purrr_1.0.1            ##  [79] KEGGREST_1.36.3        ggraph_2.1.0           nlme_3.1-162           ##  [82] KEGGgraph_1.56.0       aplot_0.1.10           compiler_4.2.1         ##  [85] rstudioapi_0.14        png_0.1-8              e1071_1.7-13           ##  [88] treeio_1.20.2          tweenr_2.0.2           bslib_0.4.2            ##  [91] stringi_1.7.12         desc_1.4.2             lattice_0.21-8         ##  [94] Matrix_1.5-4           vegan_2.6-4            permute_0.9-7          ##  [97] vctrs_0.6.1            pillar_1.9.0           lifecycle_1.0.3        ## [100] jquerylib_0.1.4        data.table_1.14.8      bitops_1.0-7           ## [103] patchwork_1.1.2        qvalue_2.28.0          R6_2.5.1               ## [106] bookdown_0.33          gridExtra_2.3          codetools_0.2-19       ## [109] MASS_7.3-58.3          rprojroot_2.0.3        withr_2.5.0            ## [112] GenomeInfoDbData_1.2.8 mgcv_1.8-42            parallel_4.2.1         ## [115] grid_4.2.1             ggfun_0.0.9            tidyr_1.3.0            ## [118] HDO.db_0.99.1          class_7.3-21           rmarkdown_2.21         ## [121] ggforce_0.4.1"},{"path":"/articles/MNet.html","id":"r-installation","dir":"Articles","previous_headings":"","what":"R Installation","title":"MNet","text":"R (http://www.r-project.org) language environment statistical computing graphics. assume R (version 4.0.0 higher) installed local machine. latest version can installed following instructions different platforms (Windows, Mac, Linux). Quick link Windows: Download R Windows. Quick link Mac: Download R Mac OS X 11. shell command lines Terminal (Linux):","code":"#Ensure you have the conda: conda install -c conda-forge r-base"},{"path":"/articles/MNet.html","id":"mnet-installation","dir":"Articles","previous_headings":"","what":"MNet Installation","title":"MNet","text":"MNet requires R version 4.0.0 higher, please see https://cran.r-project.org. MNet available operating systems can installed via Github. Check package ‘MNet’ successfully installed","code":"if(!require(BiocManager)){   install.packages(\"BiocManager\") }  if (!require(remotes)) {   BiocManager::install(\"remotes\", dependencies=T) }  if (!require(devtools)) {   BiocManager::install(\"devtools\", dependencies=T) }  BiocManager::install(\"hfang-bristol/dnet\", dependencies=T) BiocManager::install(\"tuantuangui/MNet\", dependencies=T)  #If the installation of MNet is failed, please install the failed dependency package again, such as if the ERROR is \"ERROR: dependencies ‘xxx’ is not available for package ‘MNet’\", please install the 'xxx' package again. library(help=MNet)"},{"path":"/articles/MNet.html","id":"frequently-asked-questions","dir":"Articles","previous_headings":"","what":"Frequently Asked Questions","title":"MNet","text":"Can install dependent packages dnet ERROR “Error: Failed install ‘dnet’ GitHub: resolve host: api.github.com”, please try .","code":"BiocManager::install(\"hfang-bristol/dnet\", dependencies=T)"},{"path":"/articles/MNet.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"MNet","text":"Extended pathway analysis can found Metabolism-related subnetwork analysis can found Routine analysis can found ","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tuantuan Gui. Author, maintainer. Hai Fang. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gui T, Fang H (2024). MNet: MNet. R package version 1.0.0.","code":"@Manual{,   title = {MNet: MNet},   author = {Tuantuan Gui and Hai Fang},   year = {2024},   note = {R package version 1.0.0}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"MNet","text":"MNet: R package Shiny app integrative analysis metabolomic transcriptomic data Knowledgebase - dbMNet: dbKEGG extended pathway analysis dbNet metabolism-related subnetwork analysis Algorithm expended pathway analysis: Extended pathway enrichment analysis (ePEA), extended pathway differential abundance analysis (ePDA), extended pathway set enrichment analysis (eSEA) identify dysregulated metabolic pathways via considering metabolites genes Algorithm metabolism-related subnetwork analysis: Maximising potential well-established dnet algorithm integrative analysisi metabolomic transcriptomic data provide systems-level understanding metabolic interconnections  Figure 1. Overview analytical model underlying MNet. () MNet model includes three primary components: Knowledgebase, Algorithm, Deployment. interconnected relationships illustrated. (B) Knowledgebase component comprises gene-metabolite pairs sourced five primary data sources. comprehensive knowledgebase forms foundation extended pathway subnetwork analyses (see next Algorithm component). (C) Algorithm component includes methods extended pathway metabolism-related subnetwork analyses. Extended pathway analyses (implemented ePEA, ePDA, eSEA) consider genes metabolites, metabolism-related subnetwork analysis employs previously well-established algorithm ‘dnet’ explore interactions involving genes metabolites. (D) Deployment component includes use via programmatically accessible R functions intuitive Shiny user interface.","code":""},{"path":"/index.html","id":"get-started","dir":"","previous_headings":"","what":"Get Started","title":"MNet","text":"Get started can found ","code":""},{"path":"/index.html","id":"need-help","dir":"","previous_headings":"","what":"Need help?","title":"MNet","text":"questions MNet, please don’t hesitate email (guituant2009@163.com).","code":""},{"path":"/reference/DAscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential abundance (DA) score — DAscore","title":"Differential abundance (DA) score — DAscore","text":"Calculate differential abundance (DA) score visualization DA score","code":""},{"path":"/reference/DAscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential abundance (DA) score — DAscore","text":"","code":"DAscore(   increase_members,   decrease_members,   all_members,   sort_plot = NA,   min_measured_num = 2,   out = \"metabolite\" )"},{"path":"/reference/DAscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential abundance (DA) score — DAscore","text":"increase_members increased gene symbols () metabolites' kegg id decrease_members decreased gene symbols () metabolites' kegg id all_members measured gene symbols () metabolites' kegg id sort_plot method pathway rank plot,Default rank DA score. value classification, rank pathway classification min_measured_num minimum measured members ploted pathway, Default value 2. analysis type,default \"metabolite\", alternative \"gene\" \"Extended\"","code":""},{"path":"/reference/DAscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential abundance (DA) score — DAscore","text":"Calculate differential abundance (DA) score visualization DA score","code":""},{"path":"/reference/DAscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential abundance (DA) score — DAscore","text":"","code":"name <- c(\"C00022\",\"C00024\",\"C00031\",\"B4GALT2\",\"AGPAT3\",\"FHIT\") DAscore_result <- DAscore(c(name[1],name[4]),name[2],name,min_measured_num = 0,sort_plot = \"classification\") DAscore_result$result #> # A tibble: 32 × 10 #>    pathway                    da_score increase_members_num decrease_members_num #>    <chr>                         <dbl>                <int>                <int> #>  1 Propanoate metabolism            -1                    0                    1 #>  2 Inositol phosphate metabo…       -1                    0                    1 #>  3 Fatty acid biosynthesis          -1                    0                    1 #>  4 Fatty acid elongation            -1                    0                    1 #>  5 Fatty acid degradation           -1                    0                    1 #>  6 Valine, leucine and isole…       -1                    0                    1 #>  7 Lysine degradation               -1                    0                    1 #>  8 Tryptophan metabolism            -1                    0                    1 #>  9 beta-Alanine metabolism          -1                    0                    1 #> 10 Glutathione metabolism           -1                    0                    1 #> # ℹ 22 more rows #> # ℹ 6 more variables: measured_members_num <int>, increase_member_result <chr>, #> #   decrease_member_result <chr>, measure_member_result <chr>, #> #   kegg_pathwayid <chr>, `pathway classification` <chr> ## the figure not run ## # DAscore_result$p"},{"path":"/reference/DM.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Metabolite analysis by fold change, p value and vip of the data — DM","title":"Differential Metabolite analysis by fold change, p value and vip of the data — DM","text":"Differential Metabolite analysis fold change, p value vip data","code":""},{"path":"/reference/DM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Metabolite analysis by fold change, p value and vip of the data — DM","text":"","code":"DM(object, group)"},{"path":"/reference/DM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Metabolite analysis by fold change, p value and vip of the data — DM","text":"object dataframe-like data object containing raw metabolite intensity values, rows corresponding metabolites, columns corresponding samples group group information sample","code":""},{"path":"/reference/DM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Metabolite analysis by fold change, p value and vip of the data — DM","text":"data frame result contains fold change,p value vip","code":""},{"path":"/reference/DM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Metabolite analysis by fold change, p value and vip of the data — DM","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union diff_result <- DM(2**meta_dat,group) #> OPLS-DA #> 31 samples x 219 variables and 1 response #> standard scaling of predictors and response(s) #>       R2X(cum) R2Y(cum) Q2(cum) RMSEE pre ort pR2Y  pQ2 #> Total    0.485    0.864   0.697 0.194   1   1 0.05 0.05"},{"path":"/reference/ESEA.html","id":null,"dir":"Reference","previous_headings":"","what":"the ESEA analysis — ESEA","title":"the ESEA analysis — ESEA","text":"Extended-data Set Enrichment Analysis includes gene metabolite","code":""},{"path":"/reference/ESEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the ESEA analysis — ESEA","text":"","code":"ESEA(   Ranks_all,   minSize = 5,   nPermSimple = 20000,   gseaParam = 0.5,   out = \"extended\" )"},{"path":"/reference/ESEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the ESEA analysis — ESEA","text":"Ranks_all Named vector compound-level stats gene-level stats. Names KEGG ID () gene symbol. minSize Minimal size compound () gene set test. pathways threshold excluded. gseaParam GSEA parameter value, compound-level () gene-level stats raised power 'gseaParam' calculation GSEA enrichment scores. pathway type gene metabolite,extended pathway included genes metabolites,default \"extended\",alternative \"metabolite\" \"gene\"","code":""},{"path":"/reference/ESEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the ESEA analysis — ESEA","text":"ESEA result","code":""},{"path":"/reference/ESEA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"the ESEA analysis — ESEA","text":"","code":"library(ggplot2) library(dplyr) result <- ESEA(sim.cpd.data,out=\"extended\")"},{"path":"/reference/ML_Boruta.html","id":null,"dir":"Reference","previous_headings":"","what":"feature selection using Boruta — ML_Boruta","title":"feature selection using Boruta — ML_Boruta","text":"feature selection using Boruta","code":""},{"path":"/reference/ML_Boruta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"feature selection using Boruta — ML_Boruta","text":"","code":"ML_Boruta(object)"},{"path":"/reference/ML_Boruta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"feature selection using Boruta — ML_Boruta","text":"object dataframe-like data object containing log-metabolite intensity values, columns corresponding metabolites must containing group column, rows corresponding samples","code":""},{"path":"/reference/ML_Boruta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"feature selection using Boruta — ML_Boruta","text":"test","code":""},{"path":"/reference/ML_Boruta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"feature selection using Boruta — ML_Boruta","text":"","code":"library(dplyr) meta_dat1 <- t(meta_dat) %>%   as.data.frame() %>%   dplyr::mutate(group=group) result_ML_Boruta <- ML_Boruta(meta_dat1) #>  1. run of importance source... #>  2. run of importance source... #>  3. run of importance source... #>  4. run of importance source... #>  5. run of importance source... #>  6. run of importance source... #>  7. run of importance source... #>  8. run of importance source... #>  9. run of importance source... #>  10. run of importance source... #>  11. run of importance source... #>  12. run of importance source... #>  13. run of importance source... #>  14. run of importance source... #>  15. run of importance source... #> After 15 iterations, +0.48 secs:  #>  confirmed 21 attributes: C00022, C00025, C00042, C00073, C00148 and 16 more; #>  rejected 111 attributes: C00003, C00006, C00008, C00016, C00019 and 106 more; #>  still have 87 attributes left. #>  16. run of importance source... #>  17. run of importance source... #>  18. run of importance source... #>  19. run of importance source... #> After 19 iterations, +0.56 secs:  #>  confirmed 7 attributes: C00079, C00149, C00167, C00352, C00447 and 2 more; #>  rejected 15 attributes: C00015, C00043, C00111, C00178, C00190 and 10 more; #>  still have 65 attributes left. #>  20. run of importance source... #>  21. run of importance source... #>  22. run of importance source... #>  23. run of importance source... #> After 23 iterations, +0.63 secs:  #>  rejected 5 attributes: C00093, C00137, C05100, C05581, C11924; #>  still have 60 attributes left. #>  24. run of importance source... #>  25. run of importance source... #>  26. run of importance source... #> After 26 iterations, +0.68 secs:  #>  confirmed 1 attribute: C00170; #>  rejected 10 attributes: C00002, C00004, C00020, C00037, C00064 and 5 more; #>  still have 49 attributes left. #>  27. run of importance source... #>  28. run of importance source... #>  29. run of importance source... #>  30. run of importance source... #> After 30 iterations, +0.74 secs:  #>  rejected 1 attribute: C02642; #>  still have 48 attributes left. #>  31. run of importance source... #>  32. run of importance source... #>  33. run of importance source... #> After 33 iterations, +0.79 secs:  #>  rejected 2 attributes: C00800, C01210; #>  still have 46 attributes left. #>  34. run of importance source... #>  35. run of importance source... #>  36. run of importance source... #> After 36 iterations, +0.84 secs:  #>  confirmed 1 attribute: C00097; #>  rejected 2 attributes: C00035, C05635; #>  still have 43 attributes left. #>  37. run of importance source... #>  38. run of importance source... #>  39. run of importance source... #> After 39 iterations, +0.89 secs:  #>  confirmed 2 attributes: C00307, C03406; #>  rejected 2 attributes: C00158, C00438; #>  still have 39 attributes left. #>  40. run of importance source... #>  41. run of importance source... #>  42. run of importance source... #> After 42 iterations, +0.94 secs:  #>  confirmed 1 attribute: C00153; #>  rejected 1 attribute: C00152; #>  still have 37 attributes left. #>  43. run of importance source... #>  44. run of importance source... #>  45. run of importance source... #> After 45 iterations, +0.98 secs:  #>  confirmed 1 attribute: C00013; #>  rejected 1 attribute: C00588; #>  still have 35 attributes left. #>  46. run of importance source... #>  47. run of importance source... #>  48. run of importance source... #> After 48 iterations, +1 secs:  #>  rejected 1 attribute: C00408; #>  still have 34 attributes left. #>  49. run of importance source... #>  50. run of importance source... #>  51. run of importance source... #>  52. run of importance source... #>  53. run of importance source... #>  54. run of importance source... #>  55. run of importance source... #>  56. run of importance source... #>  57. run of importance source... #>  58. run of importance source... #>  59. run of importance source... #>  60. run of importance source... #>  61. run of importance source... #> After 61 iterations, +1.2 secs:  #>  rejected 1 attribute: C05401; #>  still have 33 attributes left. #>  62. run of importance source... #>  63. run of importance source... #>  64. run of importance source... #>  65. run of importance source... #>  66. run of importance source... #>  67. run of importance source... #> After 67 iterations, +1.3 secs:  #>  confirmed 1 attribute: C00010; #>  still have 32 attributes left. #>  68. run of importance source... #>  69. run of importance source... #> After 69 iterations, +1.3 secs:  #>  rejected 2 attributes: C00065, C00385; #>  still have 30 attributes left. #>  70. run of importance source... #>  71. run of importance source... #>  72. run of importance source... #>  73. run of importance source... #>  74. run of importance source... #>  75. run of importance source... #>  76. run of importance source... #>  77. run of importance source... #> After 77 iterations, +1.4 secs:  #>  rejected 2 attributes: C00105, C00624; #>  still have 28 attributes left. #>  78. run of importance source... #>  79. run of importance source... #>  80. run of importance source... #>  81. run of importance source... #>  82. run of importance source... #>  83. run of importance source... #>  84. run of importance source... #>  85. run of importance source... #>  86. run of importance source... #>  87. run of importance source... #>  88. run of importance source... #>  89. run of importance source... #>  90. run of importance source... #>  91. run of importance source... #>  92. run of importance source... #>  93. run of importance source... #>  94. run of importance source... #>  95. run of importance source... #>  96. run of importance source... #>  97. run of importance source... #>  98. run of importance source... #>  99. run of importance source... #>  100. run of importance source... #>  101. run of importance source... #>  102. run of importance source... #>  103. run of importance source... #>  104. run of importance source... #>  105. run of importance source... #> After 105 iterations, +1.7 secs:  #>  confirmed 1 attribute: C05673; #>  still have 27 attributes left. #>  106. run of importance source... #>  107. run of importance source... #>  108. run of importance source... #>  109. run of importance source... #>  110. run of importance source... #>  111. run of importance source... #>  112. run of importance source... #>  113. run of importance source... #>  114. run of importance source... #>  115. run of importance source... #>  116. run of importance source... #>  117. run of importance source... #>  118. run of importance source... #>  119. run of importance source... #>  120. run of importance source... #>  121. run of importance source... #>  122. run of importance source... #>  123. run of importance source... #>  124. run of importance source... #>  125. run of importance source... #>  126. run of importance source... #>  127. run of importance source... #>  128. run of importance source... #>  129. run of importance source... #>  130. run of importance source... #>  131. run of importance source... #>  132. run of importance source... #>  133. run of importance source... #>  134. run of importance source... #>  135. run of importance source... #>  136. run of importance source... #>  137. run of importance source... #>  138. run of importance source... #>  139. run of importance source... #>  140. run of importance source... #>  141. run of importance source... #>  142. run of importance source... #>  143. run of importance source... #>  144. run of importance source... #>  145. run of importance source... #>  146. run of importance source... #>  147. run of importance source... #>  148. run of importance source... #>  149. run of importance source... #>  150. run of importance source... #>  151. run of importance source... #> After 151 iterations, +2.3 secs:  #>  rejected 2 attributes: C01419, C16513; #>  still have 25 attributes left. #>  152. run of importance source... #>  153. run of importance source... #>  154. run of importance source... #>  155. run of importance source... #>  156. run of importance source... #>  157. run of importance source... #>  158. run of importance source... #>  159. run of importance source... #>  160. run of importance source... #>  161. run of importance source... #>  162. run of importance source... #>  163. run of importance source... #>  164. run of importance source... #>  165. run of importance source... #> After 165 iterations, +2.5 secs:  #>  confirmed 1 attribute: C00106; #>  still have 24 attributes left. #>  166. run of importance source... #>  167. run of importance source... #>  168. run of importance source... #>  169. run of importance source... #>  170. run of importance source... #>  171. run of importance source... #>  172. run of importance source... #>  173. run of importance source... #>  174. run of importance source... #>  175. run of importance source... #>  176. run of importance source... #>  177. run of importance source... #>  178. run of importance source... #>  179. run of importance source... #> After 179 iterations, +2.6 secs:  #>  confirmed 1 attribute: C00670; #>  still have 23 attributes left. #>  180. run of importance source... #>  181. run of importance source... #>  182. run of importance source... #>  183. run of importance source... #>  184. run of importance source... #>  185. run of importance source... #>  186. run of importance source... #>  187. run of importance source... #>  188. run of importance source... #>  189. run of importance source... #>  190. run of importance source... #>  191. run of importance source... #>  192. run of importance source... #>  193. run of importance source... #>  194. run of importance source... #>  195. run of importance source... #>  196. run of importance source... #>  197. run of importance source... #>  198. run of importance source... #>  199. run of importance source... #>  200. run of importance source... #>  201. run of importance source... #>  202. run of importance source... #>  203. run of importance source... #>  204. run of importance source... #>  205. run of importance source... #>  206. run of importance source... #>  207. run of importance source... #>  208. run of importance source... #>  209. run of importance source... #>  210. run of importance source... #>  211. run of importance source... #>  212. run of importance source... #>  213. run of importance source... #>  214. run of importance source... #>  215. run of importance source... #>  216. run of importance source... #>  217. run of importance source... #>  218. run of importance source... #>  219. run of importance source... #>  220. run of importance source... #>  221. run of importance source... #>  222. run of importance source... #>  223. run of importance source... #>  224. run of importance source... #>  225. run of importance source... #>  226. run of importance source... #>  227. run of importance source... #>  228. run of importance source... #>  229. run of importance source... #>  230. run of importance source... #>  231. run of importance source... #>  232. run of importance source... #>  233. run of importance source... #>  234. run of importance source... #>  235. run of importance source... #>  236. run of importance source... #>  237. run of importance source... #>  238. run of importance source... #>  239. run of importance source... #>  240. run of importance source... #>  241. run of importance source... #>  242. run of importance source... #>  243. run of importance source... #>  244. run of importance source... #>  245. run of importance source... #>  246. run of importance source... #>  247. run of importance source... #>  248. run of importance source... #>  249. run of importance source... #>  250. run of importance source... #>  251. run of importance source... #>  252. run of importance source... #>  253. run of importance source... #>  254. run of importance source... #>  255. run of importance source... #>  256. run of importance source... #>  257. run of importance source... #>  258. run of importance source... #>  259. run of importance source... #>  260. run of importance source... #>  261. run of importance source... #>  262. run of importance source... #>  263. run of importance source... #> After 263 iterations, +3.7 secs:  #>  rejected 1 attribute: C00186; #>  still have 22 attributes left. #>  264. run of importance source... #>  265. run of importance source... #>  266. run of importance source... #>  267. run of importance source... #>  268. run of importance source... #>  269. run of importance source... #> After 269 iterations, +3.7 secs:  #>  rejected 1 attribute: C06241; #>  still have 21 attributes left. #>  270. run of importance source... #>  271. run of importance source... #>  272. run of importance source... #>  273. run of importance source... #>  274. run of importance source... #>  275. run of importance source... #>  276. run of importance source... #>  277. run of importance source... #>  278. run of importance source... #>  279. run of importance source... #>  280. run of importance source... #>  281. run of importance source... #>  282. run of importance source... #>  283. run of importance source... #>  284. run of importance source... #>  285. run of importance source... #>  286. run of importance source... #>  287. run of importance source... #>  288. run of importance source... #>  289. run of importance source... #>  290. run of importance source... #>  291. run of importance source... #>  292. run of importance source... #>  293. run of importance source... #>  294. run of importance source... #>  295. run of importance source... #>  296. run of importance source... #>  297. run of importance source... #>  298. run of importance source... #>  299. run of importance source... #>  300. run of importance source... #>  301. run of importance source... #>  302. run of importance source... #>  303. run of importance source... #>  304. run of importance source... #>  305. run of importance source... #>  306. run of importance source... #>  307. run of importance source... #>  308. run of importance source... #>  309. run of importance source... #>  310. run of importance source... #>  311. run of importance source... #>  312. run of importance source... #> After 312 iterations, +4.2 secs:  #>  confirmed 1 attribute: C13482; #>  still have 20 attributes left. #>  313. run of importance source... #>  314. run of importance source... #>  315. run of importance source... #>  316. run of importance source... #>  317. run of importance source... #>  318. run of importance source... #>  319. run of importance source... #>  320. run of importance source... #>  321. run of importance source... #>  322. run of importance source... #>  323. run of importance source... #>  324. run of importance source... #>  325. run of importance source... #>  326. run of importance source... #>  327. run of importance source... #>  328. run of importance source... #>  329. run of importance source... #>  330. run of importance source... #>  331. run of importance source... #>  332. run of importance source... #>  333. run of importance source... #>  334. run of importance source... #>  335. run of importance source... #>  336. run of importance source... #>  337. run of importance source... #>  338. run of importance source... #>  339. run of importance source... #>  340. run of importance source... #>  341. run of importance source... #>  342. run of importance source... #>  343. run of importance source... #>  344. run of importance source... #>  345. run of importance source... #>  346. run of importance source... #>  347. run of importance source... #>  348. run of importance source... #>  349. run of importance source... #>  350. run of importance source... #>  351. run of importance source... #>  352. run of importance source... #>  353. run of importance source... #>  354. run of importance source... #>  355. run of importance source... #>  356. run of importance source... #>  357. run of importance source... #>  358. run of importance source... #>  359. run of importance source... #>  360. run of importance source... #>  361. run of importance source... #>  362. run of importance source... #>  363. run of importance source... #>  364. run of importance source... #>  365. run of importance source... #>  366. run of importance source... #>  367. run of importance source... #>  368. run of importance source... #>  369. run of importance source... #>  370. run of importance source... #>  371. run of importance source... #>  372. run of importance source... #>  373. run of importance source... #>  374. run of importance source... #>  375. run of importance source... #> After 375 iterations, +5 secs:  #>  rejected 1 attribute: C00051; #>  still have 19 attributes left. #>  376. run of importance source... #>  377. run of importance source... #>  378. run of importance source... #>  379. run of importance source... #>  380. run of importance source... #>  381. run of importance source... #>  382. run of importance source... #>  383. run of importance source... #>  384. run of importance source... #>  385. run of importance source... #>  386. run of importance source... #>  387. run of importance source... #>  388. run of importance source... #>  389. run of importance source... #>  390. run of importance source... #>  391. run of importance source... #>  392. run of importance source... #>  393. run of importance source... #>  394. run of importance source... #>  395. run of importance source... #>  396. run of importance source... #>  397. run of importance source... #>  398. run of importance source... #>  399. run of importance source... #>  400. run of importance source... #>  401. run of importance source... #>  402. run of importance source... #>  403. run of importance source... #>  404. run of importance source... #>  405. run of importance source... #>  406. run of importance source... #>  407. run of importance source... #>  408. run of importance source... #>  409. run of importance source... #>  410. run of importance source... #>  411. run of importance source... #>  412. run of importance source... #>  413. run of importance source... #>  414. run of importance source... #>  415. run of importance source... #>  416. run of importance source... #>  417. run of importance source... #>  418. run of importance source... #>  419. run of importance source... #>  420. run of importance source... #>  421. run of importance source... #>  422. run of importance source... #>  423. run of importance source... #>  424. run of importance source... #>  425. run of importance source... #>  426. run of importance source... #>  427. run of importance source... #>  428. run of importance source... #>  429. run of importance source... #>  430. run of importance source... #>  431. run of importance source... #>  432. run of importance source... #>  433. run of importance source... #>  434. run of importance source... #>  435. run of importance source... #>  436. run of importance source... #>  437. run of importance source... #>  438. run of importance source... #>  439. run of importance source... #>  440. run of importance source... #>  441. run of importance source... #>  442. run of importance source... #>  443. run of importance source... #>  444. run of importance source... #>  445. run of importance source... #>  446. run of importance source... #>  447. run of importance source... #>  448. run of importance source... #>  449. run of importance source... #>  450. run of importance source... #>  451. run of importance source... #>  452. run of importance source... #>  453. run of importance source... #>  454. run of importance source... #>  455. run of importance source... #>  456. run of importance source... #>  457. run of importance source... #>  458. run of importance source... #>  459. run of importance source... #>  460. run of importance source... #>  461. run of importance source... #>  462. run of importance source... #>  463. run of importance source... #>  464. run of importance source... #>  465. run of importance source... #>  466. run of importance source... #>  467. run of importance source... #>  468. run of importance source... #>  469. run of importance source... #>  470. run of importance source... #>  471. run of importance source... #>  472. run of importance source... #>  473. run of importance source... #>  474. run of importance source... #>  475. run of importance source... #>  476. run of importance source... #>  477. run of importance source... #>  478. run of importance source... #>  479. run of importance source... #>  480. run of importance source... #>  481. run of importance source... #>  482. run of importance source... #>  483. run of importance source... #>  484. run of importance source... #>  485. run of importance source... #>  486. run of importance source... #>  487. run of importance source... #>  488. run of importance source... #>  489. run of importance source... #>  490. run of importance source... #>  491. run of importance source... #>  492. run of importance source... #>  493. run of importance source... #>  494. run of importance source... #>  495. run of importance source... #>  496. run of importance source... #>  497. run of importance source... #>  498. run of importance source... #>  499. run of importance source..."},{"path":"/reference/ML_RF.html","id":null,"dir":"Reference","previous_headings":"","what":"feature selection using random forest — ML_RF","title":"feature selection using random forest — ML_RF","text":"feature selection using random forest","code":""},{"path":"/reference/ML_RF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"feature selection using random forest — ML_RF","text":"","code":"ML_RF(object, ylim_min = 0, seed = NULL)"},{"path":"/reference/ML_RF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"feature selection using random forest — ML_RF","text":"object dataframe-like data object containing log-metabolite intensity values, columns corresponding metabolites must containing group column, rows corresponding samples ylim_min min ylim,default 0 seed seed","code":""},{"path":"/reference/ML_RF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"feature selection using random forest — ML_RF","text":"test","code":""},{"path":"/reference/ML_RF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"feature selection using random forest — ML_RF","text":"","code":"library(dplyr) meta_dat1 <- t(meta_dat) %>%   as.data.frame() %>%   dplyr::mutate(group=group) result_ML_RF <- ML_RF(meta_dat1) result_ML_RF$p  result_ML_RF$feature_result #> # A tibble: 120 × 6 #>    normal tumor MeanDecreaseAccuracy MeanDecreaseGini names  raw    #>     <dbl> <dbl>                <dbl>            <dbl> <chr>  <fct>  #>  1   5.06  4.92                 5.26            0.635 C00073 C00073 #>  2   4.59  4.80                 4.94            0.738 C02045 C02045 #>  3   4.04  3.67                 4.56            0.631 C02291 C02291 #>  4   4.00  3.89                 4.42            0.425 C00267 C00267 #>  5   3.91  3.34                 4.28            0.545 C00365 C00365 #>  6   4.10  3.66                 4.18            0.469 C02630 C02630 #>  7   3.60  3.67                 3.89            0.429 C00407 C00407 #>  8   2.93  3.65                 3.71            0.434 C00025 C00025 #>  9   2.83  3.68                 3.68            0.373 C05674 C05674 #> 10   3.00  3.57                 3.61            0.365 C00242 C00242 #> # ℹ 110 more rows"},{"path":"/reference/ML_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"feature selection using lasso or elastic network — ML_alpha","title":"feature selection using lasso or elastic network — ML_alpha","text":"feature selection using lasso elastic network","code":""},{"path":"/reference/ML_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"feature selection using lasso or elastic network — ML_alpha","text":"","code":"ML_alpha(object, method = \"lasso\")"},{"path":"/reference/ML_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"feature selection using lasso or elastic network — ML_alpha","text":"object dataframe-like data object containing log-metabolite intensity values, columns corresponding metabolites must containing group column, rows corresponding samples method feature selection method,default \"lasso\", \"elastic\" optional","code":""},{"path":"/reference/ML_alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"feature selection using lasso or elastic network — ML_alpha","text":"test","code":""},{"path":"/reference/ML_alpha.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"feature selection using lasso or elastic network — ML_alpha","text":"","code":"library(dplyr) meta_dat1 <- t(meta_dat) %>%   as.data.frame() %>%   dplyr::mutate(group=group) result_ML_lasso <- ML_alpha(meta_dat1,method=\"lasso\") #> Loading required package: lattice"},{"path":"/reference/ML_logistic.html","id":null,"dir":"Reference","previous_headings":"","what":"feature selection using logistic regression — ML_logistic","title":"feature selection using logistic regression — ML_logistic","text":"feature selection using logistic regression","code":""},{"path":"/reference/ML_logistic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"feature selection using logistic regression — ML_logistic","text":"","code":"ML_logistic(object, out_dir = \"logistic/\", seed = NULL, auc_cutoff = 0.8)"},{"path":"/reference/ML_logistic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"feature selection using logistic regression — ML_logistic","text":"object dataframe-like data object containing log-metabolite intensity values, columns corresponding metabolites must containing group column, rows corresponding samples out_dir directory seed seed auc_cutoff cut auc filtered","code":""},{"path":"/reference/ML_logistic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"feature selection using logistic regression — ML_logistic","text":"test","code":""},{"path":"/reference/ML_logistic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"feature selection using logistic regression — ML_logistic","text":"","code":"library(dplyr)"},{"path":"/reference/ML_xgboost.html","id":null,"dir":"Reference","previous_headings":"","what":"feature selection using XGBoost — ML_xgboost","title":"feature selection using XGBoost — ML_xgboost","text":"feature selection using XGBoost","code":""},{"path":"/reference/ML_xgboost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"feature selection using XGBoost — ML_xgboost","text":"","code":"ML_xgboost(object)"},{"path":"/reference/ML_xgboost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"feature selection using XGBoost — ML_xgboost","text":"object dataframe-like data object containing log-metabolite intensity values, columns corresponding metabolites must containing group column, rows corresponding samples","code":""},{"path":"/reference/ML_xgboost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"feature selection using XGBoost — ML_xgboost","text":"test","code":""},{"path":"/reference/ML_xgboost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"feature selection using XGBoost — ML_xgboost","text":"","code":"library(dplyr) meta_dat1 <- t(meta_dat) %>%   as.data.frame() %>%   dplyr::mutate(group=group) result_ML_xgboost <- ML_xgboost(meta_dat1) #> [1]\ttrain-rmse:0.364289\ttest-rmse:0.361538  #> [2]\ttrain-rmse:0.265516\ttest-rmse:0.337954  #> [3]\ttrain-rmse:0.193653\ttest-rmse:0.267666  #> [4]\ttrain-rmse:0.141777\ttest-rmse:0.218065  #> [5]\ttrain-rmse:0.104312\ttest-rmse:0.221229  #> [6]\ttrain-rmse:0.077374\ttest-rmse:0.198352  #> [7]\ttrain-rmse:0.057857\ttest-rmse:0.181757  #> [8]\ttrain-rmse:0.044101\ttest-rmse:0.170320  #> [9]\ttrain-rmse:0.034224\ttest-rmse:0.169437  #> [10]\ttrain-rmse:0.027007\ttest-rmse:0.163964  #> [11]\ttrain-rmse:0.021473\ttest-rmse:0.160803  #> [12]\ttrain-rmse:0.017216\ttest-rmse:0.158541  #> [13]\ttrain-rmse:0.013902\ttest-rmse:0.157856  #> [14]\ttrain-rmse:0.011297\ttest-rmse:0.157354  #> [15]\ttrain-rmse:0.009241\ttest-rmse:0.157011  #> [16]\ttrain-rmse:0.007614\ttest-rmse:0.156777  #> [17]\ttrain-rmse:0.006327\ttest-rmse:0.156340  #> [18]\ttrain-rmse:0.005302\ttest-rmse:0.156029  #> [19]\ttrain-rmse:0.004469\ttest-rmse:0.155934  #> [20]\ttrain-rmse:0.003779\ttest-rmse:0.155707  #> [21]\ttrain-rmse:0.003214\ttest-rmse:0.155557  #> [22]\ttrain-rmse:0.002751\ttest-rmse:0.155490  #> [23]\ttrain-rmse:0.002311\ttest-rmse:0.154659  #> [24]\ttrain-rmse:0.001973\ttest-rmse:0.154690  #> [25]\ttrain-rmse:0.001692\ttest-rmse:0.154765  #> [26]\ttrain-rmse:0.001466\ttest-rmse:0.154703  #> [27]\ttrain-rmse:0.001232\ttest-rmse:0.154251  #> [28]\ttrain-rmse:0.001048\ttest-rmse:0.154259  #> [29]\ttrain-rmse:0.000899\ttest-rmse:0.154246  #> [30]\ttrain-rmse:0.000787\ttest-rmse:0.154245  #> [31]\ttrain-rmse:0.000673\ttest-rmse:0.154010  #> [32]\ttrain-rmse:0.000588\ttest-rmse:0.153997  #> [33]\ttrain-rmse:0.000522\ttest-rmse:0.154012  #> [34]\ttrain-rmse:0.000479\ttest-rmse:0.154020  #> [35]\ttrain-rmse:0.000444\ttest-rmse:0.153918  #> [36]\ttrain-rmse:0.000416\ttest-rmse:0.153894  #> [37]\ttrain-rmse:0.000387\ttest-rmse:0.153900  #> [38]\ttrain-rmse:0.000387\ttest-rmse:0.153897  #> [39]\ttrain-rmse:0.000387\ttest-rmse:0.153895  #> [40]\ttrain-rmse:0.000387\ttest-rmse:0.153893  #> [41]\ttrain-rmse:0.000387\ttest-rmse:0.153892  #> [42]\ttrain-rmse:0.000387\ttest-rmse:0.153892  #> [43]\ttrain-rmse:0.000387\ttest-rmse:0.153891  #> [44]\ttrain-rmse:0.000387\ttest-rmse:0.153891  #> [45]\ttrain-rmse:0.000387\ttest-rmse:0.153891  #> [46]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [47]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [48]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [49]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [50]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [51]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [52]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [53]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [54]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [55]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [56]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [57]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [58]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [59]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [60]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [61]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [62]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [63]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [64]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [65]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [66]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [67]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [68]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [69]\ttrain-rmse:0.000387\ttest-rmse:0.153890  #> [70]\ttrain-rmse:0.000387\ttest-rmse:0.153890   result_ML_xgboost$p  result_ML_xgboost$feature_result #>      Feature         Gain       Cover   Frequency   Importance #>  1:   C00073 4.085537e-01 0.012088975 0.008333333 4.085537e-01 #>  2:   C00153 2.478208e-01 0.024177950 0.016666667 2.478208e-01 #>  3:   C02045 1.894643e-01 0.036266925 0.025000000 1.894643e-01 #>  4:   C00408 6.100147e-02 0.066731141 0.066666667 6.100147e-02 #>  5:   C15025 3.801796e-02 0.042069632 0.058333333 3.801796e-02 #>  6:   C03264 3.177156e-02 0.026595745 0.033333333 3.177156e-02 #>  7:   C02630 8.191876e-03 0.030464217 0.025000000 8.191876e-03 #>  8:   C02291 4.342660e-03 0.021276596 0.016666667 4.342660e-03 #>  9:   C00673 3.658567e-03 0.057543520 0.066666667 3.658567e-03 #> 10:   C00149 2.319408e-03 0.012088975 0.008333333 2.319408e-03 #> 11:   C00022 1.874673e-03 0.060444874 0.041666667 1.874673e-03 #> 12:   C00255 1.176288e-03 0.024177950 0.016666667 1.176288e-03 #> 13:   C02918 3.597439e-04 0.017891683 0.025000000 3.597439e-04 #> 14:   C00008 3.144974e-04 0.037717602 0.058333333 3.144974e-04 #> 15:   C00267 2.984550e-04 0.014506770 0.016666667 2.984550e-04 #> 16:  C06178  2.932223e-04 0.005802708 0.008333333 2.932223e-04 #> 17:   C05581 1.547884e-04 0.014990329 0.016666667 1.547884e-04 #> 18:  C00219  1.137790e-04 0.108800774 0.075000000 1.137790e-04 #> 19:   C01180 1.094198e-04 0.021760155 0.025000000 1.094198e-04 #> 20:   C09642 8.563875e-05 0.019825919 0.108333333 8.563875e-05 #> 21:   C00906 5.156631e-05 0.066731141 0.050000000 5.156631e-05 #> 22:   C00016 9.139274e-06 0.021760155 0.016666667 9.139274e-06 #> 23:   C05635 6.479776e-06 0.048355899 0.033333333 6.479776e-06 #> 24:   C00117 3.049669e-06 0.010154739 0.008333333 3.049669e-06 #> 25:   C00632 2.719854e-06 0.072533849 0.050000000 2.719854e-06 #> 26:   C01250 1.388176e-06 0.007736944 0.033333333 1.388176e-06 #> 27:   C03413 5.464619e-07 0.009671180 0.008333333 5.464619e-07 #> 28:   C01019 5.403351e-07 0.018375242 0.016666667 5.403351e-07 #> 29:   C07086 4.707187e-07 0.023694391 0.016666667 4.707187e-07 #> 30:   C00250 3.711347e-07 0.010154739 0.008333333 3.711347e-07 #> 31:   C00042 2.785448e-07 0.010638298 0.008333333 2.785448e-07 #> 32:   C00258 1.961414e-07 0.012088975 0.008333333 1.961414e-07 #> 33: C03465   1.887259e-07 0.010154739 0.008333333 1.887259e-07 #> 34:   C05401 1.344331e-07 0.011605416 0.008333333 1.344331e-07 #> 35:   C00380 1.104488e-07 0.011121857 0.008333333 1.104488e-07 #>      Feature         Gain       Cover   Frequency   Importance"},{"path":"/reference/MSEA.html","id":null,"dir":"Reference","previous_headings":"","what":"the MSEA analysis — MSEA","title":"the MSEA analysis — MSEA","text":"Metabolite Set Enrichment Analysis","code":""},{"path":"/reference/MSEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the MSEA analysis — MSEA","text":"","code":"MSEA(Ranks_all, minSize = 5, nPermSimple = 20000, gseaParam = 0.5)"},{"path":"/reference/MSEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the MSEA analysis — MSEA","text":"Ranks_all Named vector compound-level stats. Names 'pathways' minSize Minimal size compound set test. pathways threshold excluded. gseaParam GSEA parameter value, compound-level statis raised power 'gseaParam' calculation GSEA enrichment scores.","code":""},{"path":"/reference/MSEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the MSEA analysis — MSEA","text":"MSEA result","code":""},{"path":"/reference/MSEA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"the MSEA analysis — MSEA","text":"","code":"library(ggplot2) library(dplyr) result <- MSEA(sim.cpd.data)"},{"path":"/reference/MetCox.html","id":null,"dir":"Reference","previous_headings":"","what":"The cox analysis about the metabolites — MetCox","title":"The cox analysis about the metabolites — MetCox","text":"cox analysis metabolites","code":""},{"path":"/reference/MetCox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The cox analysis about the metabolites — MetCox","text":"","code":"MetCox(dat)"},{"path":"/reference/MetCox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The cox analysis about the metabolites — MetCox","text":"object dataframe-like data object containing log-metabolite intensity values, rows corresponding samples, columns corresponding metablites must containing time status","code":""},{"path":"/reference/MetCox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The cox analysis about the metabolites — MetCox","text":"result","code":""},{"path":"/reference/MetCox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The cox analysis about the metabolites — MetCox","text":"","code":"result <- MetCox(dat_surv)"},{"path":"/reference/PathwayAnalysis.html","id":null,"dir":"Reference","previous_headings":"","what":"KEGG pathway analysis — PathwayAnalysis","title":"KEGG pathway analysis — PathwayAnalysis","text":"KEGG pathway analysis includes gene metabolites pathway analysis alone, also includes extended pathway analysis including genes metabolites","code":""},{"path":"/reference/PathwayAnalysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"KEGG pathway analysis — PathwayAnalysis","text":"","code":"PathwayAnalysis(   name,   out = \"Extended\",   p_cutoff = 0.05,   noverlap_cutoff = 0,   test = c(\"hypergeo\", \"fisher\", \"binomial\") )"},{"path":"/reference/PathwayAnalysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"KEGG pathway analysis — PathwayAnalysis","text":"name vector genes' metabolites' names pathway type gene metabolite,extended pathway included genes metabolites,default \"extended\",alternative \"metabolite\" \"gene\" p_cutoff p_cutoff used declare significant terms. default, set 0.05 noverlap_cutoff noverlap_cutoff used declare number overlap. default, set 0 test test statistic used. can \"fisher\" using fisher's exact test, \"hypergeo\" using hypergeometric test, \"binomial\" using binomial test. Fisher's exact test test independence gene group (genes belonging group ) gene annotation (genes annotated term ), thus compare sampling left part background (sampling without replacement). Hypergeometric test sample random (without replacement) background containing annotated non-annotated genes, thus compare sampling background. Unlike hypergeometric test, binomial test sample random (replacement) background constant probability. terms ease finding significance, order: hypergeometric test > fisher's exact test > binomial test. words, terms calculated p-value, hypergeometric test < fisher's exact test < binomial test","code":""},{"path":"/reference/PathwayAnalysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"KEGG pathway analysis — PathwayAnalysis","text":"result","code":""},{"path":"/reference/PathwayAnalysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"KEGG pathway analysis — PathwayAnalysis","text":"","code":"name <- c(\"C15973\",\"C16254\",\"MDH1\") result <- PathwayAnalysis(name,out=\"Extended\",p_cutoff=0.05,noverlap_cutoff=0,test=\"hypergeo\") #> Start at 2024-09-06 12:52:26 #>  #> Warning: one argument not used by format ' #> #######################################################' #>  #> ####################################################### #> 'xEnricher' is being called (2024-09-06 12:52:26): #> Warning: one argument not used by format '#######################################################' #> ####################################################### #> First, generate a subgraph induced (via 'all_paths' mode) by the annotation data (2024-09-06 12:52:26) ... #> Next, prepare enrichment analysis (2024-09-06 12:52:27) ... #> \tThere are 3 genes/SNPs of interest tested against 4715 genes/SNPs as the background (annotatable only? TRUE) (2024-09-06 12:52:27) #> Third, perform enrichment analysis using 'hypergeo' test (2024-09-06 12:52:27) ... #> \tThere are 84 terms being used, each restricted within [1,2000] annotations #> Last, adjust the p-values for 84 terms (with 0 minimum overlaps) using the BH method (2024-09-06 12:52:27) ... #> Warning: one argument not used by format '#######################################################' #> ####################################################### #> 'xEnricher' has been finished (2024-09-06 12:52:27)! #> Warning: one argument not used by format '####################################################### #> ' #> ####################################################### #>  #> End at 2024-09-06 12:52:27 #> Runtime in total (xEnricherYours): 1 secs name <- \"C15973\" result <- PathwayAnalysis(name,out=\"metabolite\",p_cutoff=0.05,noverlap_cutoff=0,test=\"hypergeo\") #> Start at 2024-09-06 12:52:28 #>  #> Warning: one argument not used by format ' #> #######################################################' #>  #> ####################################################### #> 'xEnricher' is being called (2024-09-06 12:52:28): #> Warning: one argument not used by format '#######################################################' #> ####################################################### #> First, generate a subgraph induced (via 'all_paths' mode) by the annotation data (2024-09-06 12:52:28) ... #> Next, prepare enrichment analysis (2024-09-06 12:52:28) ... #> \tThere are 1 genes/SNPs of interest tested against 3047 genes/SNPs as the background (annotatable only? TRUE) (2024-09-06 12:52:28) #> Third, perform enrichment analysis using 'hypergeo' test (2024-09-06 12:52:28) ... #> \tThere are 81 terms being used, each restricted within [1,2000] annotations #> Last, adjust the p-values for 81 terms (with 0 minimum overlaps) using the BH method (2024-09-06 12:52:28) ... #> Warning: one argument not used by format '#######################################################' #> ####################################################### #> 'xEnricher' has been finished (2024-09-06 12:52:28)! #> Warning: one argument not used by format '####################################################### #> ' #> ####################################################### #>  #> End at 2024-09-06 12:52:28 #> Runtime in total (xEnricherYours): 0 secs name <- \"MDH1\" result <- PathwayAnalysis(name,out=\"gene\",p_cutoff=0.05,noverlap_cutoff=0,test=\"hypergeo\") #> Start at 2024-09-06 12:52:28 #>  #> Warning: one argument not used by format ' #> #######################################################' #>  #> ####################################################### #> 'xEnricher' is being called (2024-09-06 12:52:28): #> Warning: one argument not used by format '#######################################################' #> ####################################################### #> First, generate a subgraph induced (via 'all_paths' mode) by the annotation data (2024-09-06 12:52:28) ... #> Next, prepare enrichment analysis (2024-09-06 12:52:28) ... #> \tThere are 1 genes/SNPs of interest tested against 1668 genes/SNPs as the background (annotatable only? TRUE) (2024-09-06 12:52:28) #> Third, perform enrichment analysis using 'hypergeo' test (2024-09-06 12:52:28) ... #> \tThere are 84 terms being used, each restricted within [1,2000] annotations #> Last, adjust the p-values for 84 terms (with 0 minimum overlaps) using the BH method (2024-09-06 12:52:28) ... #> Warning: one argument not used by format '#######################################################' #> ####################################################### #> 'xEnricher' has been finished (2024-09-06 12:52:28)! #> Warning: one argument not used by format '####################################################### #> ' #> ####################################################### #>  #> End at 2024-09-06 12:52:28 #> Runtime in total (xEnricherYours): 0 secs"},{"path":"/reference/keggid2pathway.html","id":null,"dir":"Reference","previous_headings":"","what":"the kegg pathway corresponding to kegg id — keggid2pathway","title":"the kegg pathway corresponding to kegg id — keggid2pathway","text":"kegg pathway corresponding kegg id","code":""},{"path":"/reference/keggid2pathway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the kegg pathway corresponding to kegg id — keggid2pathway","text":"","code":"keggid2pathway(keggid)"},{"path":"/reference/keggid2pathway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the kegg pathway corresponding to kegg id — keggid2pathway","text":"keggid KEGG ID","code":""},{"path":"/reference/keggid2pathway.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the kegg pathway corresponding to kegg id — keggid2pathway","text":"result","code":""},{"path":"/reference/keggid2pathway.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"the kegg pathway corresponding to kegg id — keggid2pathway","text":"","code":"keggid <- c(\"C05984\",\"C02494\") kegg_result <- keggid2pathway(keggid)"},{"path":"/reference/meta_impute.html","id":null,"dir":"Reference","previous_headings":"","what":"impute the NA in data — meta_impute","title":"impute the NA in data — meta_impute","text":"impute NA data","code":""},{"path":"/reference/meta_impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"impute the NA in data — meta_impute","text":"","code":"meta_impute(object, method, k = k)"},{"path":"/reference/meta_impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"impute the NA in data — meta_impute","text":"object object dataframe-like data object containing raw metabolite intensity values, rows corresponding metabolites, columns corresponding samples method method used imputed data, default min_0.1. can choose \"mean\",\"median\",\"min\",\"knn\"","code":""},{"path":"/reference/meta_impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"impute the NA in data — meta_impute","text":"data frame","code":""},{"path":"/reference/mlimma.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential Metabolite analysis by limma — mlimma","title":"Differential Metabolite analysis by limma — mlimma","text":"Differential Metabolite analysis limma","code":""},{"path":"/reference/mlimma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential Metabolite analysis by limma — mlimma","text":"","code":"mlimma(object, group)"},{"path":"/reference/mlimma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential Metabolite analysis by limma — mlimma","text":"object object dataframe-like data object containing raw metabolite intensity values, rows corresponding metabolites, columns corresponding samples group data's group","code":""},{"path":"/reference/mlimma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential Metabolite analysis by limma — mlimma","text":"dataframe limma's result","code":""},{"path":"/reference/mlimma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential Metabolite analysis by limma — mlimma","text":"","code":"result <- mlimma(meta_dat,group)"},{"path":"/reference/myscale.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale the data — myscale","title":"Scale the data — myscale","text":"Scale data","code":""},{"path":"/reference/myscale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale the data — myscale","text":"","code":"myscale(object, method = \"log_zscore\")"},{"path":"/reference/myscale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale the data — myscale","text":"object dataframe-like data object containing raw metabolite intensity values, rows corresponding metabolites, columns corresponding samples method default \"log_zscore\",\"raw_zscore\" alternative","code":""},{"path":"/reference/myscale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale the data — myscale","text":"test","code":""},{"path":"/reference/myscale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scale the data — myscale","text":"","code":"object_scale <- myscale(object) #> Error in t(object): object 'object' not found"},{"path":"/reference/name2keggid.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the compound name to kegg id — name2keggid","title":"Change the compound name to kegg id — name2keggid","text":"Change compound name kegg id","code":""},{"path":"/reference/name2keggid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the compound name to kegg id — name2keggid","text":"","code":"name2keggid(compound_name)"},{"path":"/reference/name2keggid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the compound name to kegg id — name2keggid","text":"compound_name compound name","code":""},{"path":"/reference/name2keggid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the compound name to kegg id — name2keggid","text":"KEGG ID","code":""},{"path":"/reference/name2keggid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the compound name to kegg id — name2keggid","text":"","code":"compound_name <- c(\"2-Hydroxybutyric acid\",\"1-Methyladenosine\",\"tt\",\"2-Aminooctanoic acid\") name2keggid(compound_name) #> Warning: cannot remove file 'test.data.1', reason 'No such file or directory' #> Warning: cannot remove file 'test.data.2', reason 'No such file or directory' #>                    name kegg_id #> 1 2-Hydroxybutyric acid  C05984 #> 2     1-Methyladenosine  C02494 #> 3                    tt    <NA> #> 4  2-Aminooctanoic acid    <NA>"},{"path":"/reference/name2pathway.html","id":null,"dir":"Reference","previous_headings":"","what":"seek the metabolits' pathway — name2pathway","title":"seek the metabolits' pathway — name2pathway","text":"seek metabolits' pathway","code":""},{"path":"/reference/name2pathway.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"seek the metabolits' pathway — name2pathway","text":"","code":"name2pathway(name)"},{"path":"/reference/name2pathway.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"seek the metabolits' pathway — name2pathway","text":"name metabolites' compound name","code":""},{"path":"/reference/name2pathway.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"seek the metabolits' pathway — name2pathway","text":"pathway information compound name corresponding KEGG ID","code":""},{"path":"/reference/name2pathway.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"seek the metabolits' pathway — name2pathway","text":"","code":"name <- c(\"2-Hydroxybutyric acid\",\"1-Methyladenosine\",\"tt\") result_all <- name2pathway(name) #> Warning: cannot remove file 'test.data.1', reason 'No such file or directory' #> Start at 2024-09-06 12:52:40 #>  #> Warning: one argument not used by format ' #> #######################################################' #>  #> ####################################################### #> 'xEnricher' is being called (2024-09-06 12:52:40): #> Warning: one argument not used by format '#######################################################' #> ####################################################### #> First, generate a subgraph induced (via 'all_paths' mode) by the annotation data (2024-09-06 12:52:40) ... #> Next, prepare enrichment analysis (2024-09-06 12:52:40) ... #> \tThere are 1 genes/SNPs of interest tested against 3043 genes/SNPs as the background (annotatable only? TRUE) (2024-09-06 12:52:40) #> Third, perform enrichment analysis using 'hypergeo' test (2024-09-06 12:52:40) ... #> \tThere are 81 terms being used, each restricted within [1,2000] annotations #> Last, adjust the p-values for 81 terms (with 0 minimum overlaps) using the BH method (2024-09-06 12:52:40) ... #> Warning: one argument not used by format '#######################################################' #> ####################################################### #> 'xEnricher' has been finished (2024-09-06 12:52:40)! #> Warning: one argument not used by format '####################################################### #> ' #> ####################################################### #>  #> End at 2024-09-06 12:52:40 #> Runtime in total (xEnricherYours): 0 secs #> Warning: Expected 1 pieces. Additional pieces discarded in 2606 rows [1, 2, 3, 4, 5, 6, #> 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 22, 23, ...]. #> Warning: Expected 1 pieces. Additional pieces discarded in 2606 rows [1, 2, 3, 4, 5, 6, #> 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 22, 23, ...]. result <- result_all$name2pathway pathway <- result_all$pathway kegg_name <- result_all$kegg_name"},{"path":"/reference/name2refmet.html","id":null,"dir":"Reference","previous_headings":"","what":"change the compound name to refmet name — name2refmet","title":"change the compound name to refmet name — name2refmet","text":"compound name can changed kegg id, compound name changed refmet id","code":""},{"path":"/reference/name2refmet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"change the compound name to refmet name — name2refmet","text":"","code":"name2refmet(compound_name)"},{"path":"/reference/name2refmet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"change the compound name to refmet name — name2refmet","text":"compound_name compound name need changed refmet name","code":""},{"path":"/reference/name2refmet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"change the compound name to refmet name — name2refmet","text":"compound name refmet name","code":""},{"path":"/reference/name2refmet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"change the compound name to refmet name — name2refmet","text":"","code":"compound_name <- c(\"2-Hydroxybutyric acid\",\"1-Methyladenosine\",\"tt\",\"2-Aminooctanoic acid\") name2refmet(compound_name) #> Warning: cannot remove file 'test.data.1', reason 'No such file or directory' #> Warning: cannot remove file 'test.data.2', reason 'No such file or directory' #> Warning: cannot remove file 'test.data.3', reason 'No such file or directory' #> Warning: cannot remove file 'test.data.4', reason 'No such file or directory' #>              Input name           refmet_name    formula   super_class #> 1 2-Hydroxybutyric acid 2-Hydroxybutyric acid     C4H8O3   Fatty Acyls #> 2     1-Methyladenosine     1-Methyladenosine C11H15N5O4 Nucleic acids #> 3                    tt                    tt          -             - #> 4  2-Aminooctanoic acid  2-Aminocaprylic acid   C8H17NO2   Fatty Acyls #>    main_class              sub_class #> 1 Fatty acids             Hydroxy FA #> 2     Purines Purine ribonucleosides #> 3           -                      - #> 4 Fatty acids               Amino FA"},{"path":"/reference/pCliTS.html","id":null,"dir":"Reference","previous_headings":"","what":"The clinical's time series analysis — pCliTS","title":"The clinical's time series analysis — pCliTS","text":"clinical's time series analysis","code":""},{"path":"/reference/pCliTS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The clinical's time series analysis — pCliTS","text":"","code":"pCliTS(clinical, marker)"},{"path":"/reference/pCliTS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The clinical's time series analysis — pCliTS","text":"clinical clinical marker different time, need included \"time\",\"group\",maker; \"high\"\"low\" alternative.","code":""},{"path":"/reference/pCliTS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The clinical's time series analysis — pCliTS","text":"Figure","code":""},{"path":"/reference/pCliTS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The clinical's time series analysis — pCliTS","text":"","code":"time_series_ALT <- pCliTS(clinical_index)"},{"path":"/reference/pESEA.html","id":null,"dir":"Reference","previous_headings":"","what":"the visualization of ESEA in a pathway — pESEA","title":"the visualization of ESEA in a pathway — pESEA","text":"visualization ESEA pathway","code":""},{"path":"/reference/pESEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the visualization of ESEA in a pathway — pESEA","text":"","code":"pESEA(   pathway_name,   Ranks_all,   out = \"Extended\",   gseaParam = 0.5,   minSize = 5,   ticksSize = 0.2 )"},{"path":"/reference/pESEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the visualization of ESEA in a pathway — pESEA","text":"pathway_name pathway name plot Ranks_all Named vector compound-level () gene-level stats. Names KEGG ID () gene-level pathway type gene metabolite,extended pathway included genes metabolites,default \"Extended\",alternative \"metabolite\" \"gene\" gseaParam GSEA parameter value, compound-level () gene-level stats raised power 'gseaParam' calculation GSEA enrichment scores. minSize Minimal size compound () gene set test. pathways threshold excluded. ticksSize width vertical line corresponding compound gene(default: 0.2)","code":""},{"path":"/reference/pESEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the visualization of ESEA in a pathway — pESEA","text":"visualization pathway's ESEA","code":""},{"path":"/reference/pESEA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"the visualization of ESEA in a pathway — pESEA","text":"","code":"library(ggplot2) library(dplyr) result <- pESEA(\"Butanoate metabolism\",sim.cpd.data,out=\"metabolite\")"},{"path":"/reference/pHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap of differential metabolites — pHeatmap","title":"Heatmap of differential metabolites — pHeatmap","text":"Heatmap differential metabolites","code":""},{"path":"/reference/pHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap of differential metabolites — pHeatmap","text":"","code":"pHeatmap(   object,   group,   fontsize_row = 5,   fontsize_col = 4,   clustering_method = \"complete\",   clustering_distance_cols = \"correlation\",   tumor_color = \"#d53e4f\",   normal_color = \"#7FC8A9\" )"},{"path":"/reference/pHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap of differential metabolites — pHeatmap","text":"object dataframe-like data object containing raw metabolite intensity values, rows corresponding differential metabolites, columns corresponding samples group character vector,data's group information, must tumor normal fontsize_row numeric, value row's fontsize, default 5 fontsize_col numeric, value column's fontsize, default 4 clustering_method method cluster,default complete clustering_distance_cols distance cluster,default correlation","code":""},{"path":"/reference/pHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heatmap of differential metabolites — pHeatmap","text":"Heatmap","code":""},{"path":"/reference/pHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap of differential metabolites — pHeatmap","text":"","code":"if (FALSE) { diff_result <- DM(2**meta_dat,group) # filter the differential metabolites by default fold change >1.5 or < 1/1.5 ,fdr < 0.05 and VIP>1 diff_result_filter <- diff_result %>%   dplyr::filter(fold_change >1.3 | fold_change < 1/1.3) %>%   dplyr::filter(fdr_wilcox<0.1) %>%   dplyr::filter(vip>0.8) meta_dat_diff <- meta_dat[rownames(meta_dat) %in% diff_result_filter$name,] p_heatmap <- pHeatmap(meta_dat_diff,group,fontsize_row=5,fontsize_col=4,clustering_method=\"ward.D\",clustering_distance_cols=\"correlation\") }"},{"path":"/reference/pMSEA.html","id":null,"dir":"Reference","previous_headings":"","what":"the visualization of MSEA in a pathway — pMSEA","title":"the visualization of MSEA in a pathway — pMSEA","text":"visualization MSEA pathway","code":""},{"path":"/reference/pMSEA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the visualization of MSEA in a pathway — pMSEA","text":"","code":"pMSEA(pathway_name, Ranks_all, gseaParam = 0.5, minSize = 5, ticksSize = 0.2)"},{"path":"/reference/pMSEA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the visualization of MSEA in a pathway — pMSEA","text":"pathway_name pathway name plot Ranks_all Named vector compound-level stats. Names 'pathways' gseaParam GSEA parameter value, compound-level statis raised power 'gseaParam' calculation GSEA enrichment scores. minSize Minimal size compound set test. pathways threshold excluded. ticksSize width vertical line corresponding compound (default: 0.2)","code":""},{"path":"/reference/pMSEA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the visualization of MSEA in a pathway — pMSEA","text":"visualization pathway's MSEA","code":""},{"path":"/reference/pMSEA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"the visualization of MSEA in a pathway — pMSEA","text":"","code":"library(ggplot2) library(dplyr) result <- pMSEA(\"Butanoate metabolism\",sim.cpd.data)"},{"path":"/reference/pNetCor.html","id":null,"dir":"Reference","previous_headings":"","what":"The correlation network's extraction — pNetCor","title":"The correlation network's extraction — pNetCor","text":"correlation network's extraction","code":""},{"path":"/reference/pNetCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The correlation network's extraction — pNetCor","text":"","code":"pNetCor(   dat_meta,   dat_gene,   cor_method = \"pearson\",   cor_threshold = 0.9,   p_threshold = 0.01 )"},{"path":"/reference/pNetCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The correlation network's extraction — pNetCor","text":"dat_meta metabolite data, row metabolite's KEGGID, column sample dat_gene gene expression data, row gene symbol, column sample cor_method specifies type correlations compute. Spearman correlations Pearson linear correlations computed ranks non-missing elements, using midranks ties. cor_threshold cutoff correlation coefficient p_threshold cutoff correlation p value","code":""},{"path":"/reference/pNetCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The correlation network's extraction — pNetCor","text":"figure data frame","code":""},{"path":"/reference/pNetCor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The correlation network's extraction — pNetCor","text":"","code":"a <- pNetCor(meta_dat,gene_dat) #> [1] \"Starting correlation calculation\" #> [1] \"If the data is large, it will take some minutes\""},{"path":"/reference/pPCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the PCA (Principal Component Analysis) — pPCA","title":"Plot the PCA (Principal Component Analysis) — pPCA","text":"Plot PCA (Principal Component Analysis)","code":""},{"path":"/reference/pPCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the PCA (Principal Component Analysis) — pPCA","text":"","code":"pPCA(object, group)"},{"path":"/reference/pPCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the PCA (Principal Component Analysis) — pPCA","text":"object dataframe-like data object containing raw metabolite intensity values, rows corresponding metabolites, columns corresponding samples group group","code":""},{"path":"/reference/pPCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the PCA (Principal Component Analysis) — pPCA","text":"Visualization PCA","code":""},{"path":"/reference/pPCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the PCA (Principal Component Analysis) — pPCA","text":"","code":"p_PCA <- pPCA(meta_dat,group) #p_PCA$p1 #p_PCA$p2 #p_PCA$p3"},{"path":"/reference/pPathview.html","id":null,"dir":"Reference","previous_headings":"","what":"the pathview of differential metabolites — pPathview","title":"the pathview of differential metabolites — pPathview","text":"pathview differential metabolites","code":""},{"path":"/reference/pPathview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the pathview of differential metabolites — pPathview","text":"","code":"pPathview(cpd.data, gene.data = NULL, hsaid = NULL, outdir = \"./\")"},{"path":"/reference/pPathview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the pathview of differential metabolites — pPathview","text":"cpd.data character vector,metabolites' value, log2(fold change) gene.data default NULL, gene expression data, log2(fold change) hsaid default NULL, hsa pathway id wanted plot outdir output directory","code":""},{"path":"/reference/pPathview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the pathview of differential metabolites — pPathview","text":"Figure","code":""},{"path":"/reference/pPathview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"the pathview of differential metabolites — pPathview","text":"","code":"kegg_id <- c(\"C02494\",\"C03665\",\"C01546\",\"C05984\",\"C14088\",\"C00587\") value <- c(-0.3824620,0.1823628,-1.1681486,0.5164899,1.6449798,-0.7340652) names(value) <- kegg_id cpd.data <- value pPathview(cpd.data,outdir=\"test\") #>  #> ############################################################################## #> Pathview is an open source software package distributed under GNU General #> Public License version 3 (GPLv3). Details of GPLv3 is available at #> http://www.gnu.org/licenses/gpl-3.0.html. Particullary, users are required to #> formally cite the original Pathview paper (not just mention it) in publications #> or products. For details, do citation(\"pathview\") within R. #>  #> The pathview downloads and uses KEGG data. Non-academic uses may require a KEGG #> license agreement (details at http://www.kegg.jp/kegg/legal.html). #> ############################################################################## #> Warning: data set ‘bods’ not found #> Info: Downloading xml files for hsa00640, 1/1 pathways.. #> Info: Downloading png files for hsa00640, 1/1 pathways.. #> 'select()' returned 1:1 mapping between keys and columns #> Info: Working in directory /Users/guituantuan/Desktop/R_packages/tt1/docs/reference #> Info: Writing image file hsa00640.pathview.metabolite.png #> Warning: data set ‘bods’ not found #> Info: Downloading xml files for hsa00400, 1/1 pathways.. #> Info: Downloading png files for hsa00400, 1/1 pathways.. #> 'select()' returned 1:1 mapping between keys and columns #> Info: Working in directory /Users/guituantuan/Desktop/R_packages/tt1/docs/reference #> Info: Writing image file hsa00400.pathview.metabolite.png #> Warning: 'test' already exists #> 14 files moved. 0 failed. #> 2 files moved. 0 failed."},{"path":"/reference/pVolcano.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the volcano plot — pVolcano","title":"Visualization of the volcano plot — pVolcano","text":"Visualization volcano plot","code":""},{"path":"/reference/pVolcano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the volcano plot — pVolcano","text":"","code":"pVolcano(object, foldchange_threshold = 1.5)"},{"path":"/reference/pVolcano.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the volcano plot — pVolcano","text":"object dataframe contains column \"name\",\"fold_change\", \"fdr_wilcox\" foldchange_threshold fold change, default 1.5","code":""},{"path":"/reference/pVolcano.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of the volcano plot — pVolcano","text":"Visualization volcano plot","code":""},{"path":"/reference/pVolcano.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the volcano plot — pVolcano","text":"","code":"diff_result <- DM(2**meta_dat,group) #> OPLS-DA #> 31 samples x 219 variables and 1 response #> standard scaling of predictors and response(s) #>       R2X(cum) R2Y(cum) Q2(cum) RMSEE pre ort pR2Y  pQ2 #> Total    0.485    0.864   0.697 0.194   1   1 0.05 0.05 p_volcano <- pVolcano(diff_result,foldchange=1.5)"},{"path":"/reference/pZscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the z-score plot — pZscore","title":"Visualization of the z-score plot — pZscore","text":"Visualization z-score plot","code":""},{"path":"/reference/pZscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the z-score plot — pZscore","text":"","code":"pZscore(   object,   group,   tumor_color = \"#d53e4f\",   normal_color = \"#7FC8A9\",   shape_size = 3,   ysize = 5 )"},{"path":"/reference/pZscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the z-score plot — pZscore","text":"object dataframe-like data object containing raw metabolite intensity values, rows corresponding metabolites, columns corresponding samples group sample's group information","code":""},{"path":"/reference/pZscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of the z-score plot — pZscore","text":"Visualization z-score plot","code":""},{"path":"/reference/pZscore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the z-score plot — pZscore","text":"","code":"diff_result <- DM(2**meta_dat,group) #> OPLS-DA #> 31 samples x 219 variables and 1 response #> standard scaling of predictors and response(s) #>       R2X(cum) R2Y(cum) Q2(cum) RMSEE pre ort pR2Y  pQ2 #> Total    0.485    0.864   0.697 0.194   1   1 0.05 0.05 # filter the differential metabolites by default fold change >1.5 or < 1/1.5 ,fdr < 0.05 and VIP>1 diff_result_filter <- diff_result %>%   dplyr::filter(fold_change >1.3 | fold_change < 1/1.3) %>%   dplyr::filter(fdr_wilcox<0.1) %>%   dplyr::filter(vip>0.8) meta_dat_diff <- meta_dat[rownames(meta_dat) %in% diff_result_filter$name,] p_zscore <- pZscore(meta_dat_diff,group)"},{"path":"/reference/pathway2pathwayid.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the pathway name to pathway KEGG ID — pathway2pathwayid","title":"Change the pathway name to pathway KEGG ID — pathway2pathwayid","text":"Change pathway name pathway KEGG ID","code":""},{"path":"/reference/pathway2pathwayid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the pathway name to pathway KEGG ID — pathway2pathwayid","text":"","code":"pathway2pathwayid(pathwayname)"},{"path":"/reference/pathway2pathwayid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the pathway name to pathway KEGG ID — pathway2pathwayid","text":"pathwayname pathway name,\"Glycolysis / Gluconeogenesis\"","code":""},{"path":"/reference/pathway2pathwayid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the pathway name to pathway KEGG ID — pathway2pathwayid","text":"pathway name pathway KEGG ID","code":""},{"path":"/reference/pathway2pathwayid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the pathway name to pathway KEGG ID — pathway2pathwayid","text":"","code":"pathwayid <- pathway2pathwayid(\"Glycolysis / Gluconeogenesis\")"},{"path":"/reference/pathwayinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"the gene and the metabolite in the pathway — pathwayinfo","title":"the gene and the metabolite in the pathway — pathwayinfo","text":"gene metabolite pathway","code":""},{"path":"/reference/pathwayinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the gene and the metabolite in the pathway — pathwayinfo","text":"","code":"pathwayinfo(pathwayid)"},{"path":"/reference/pathwayinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the gene and the metabolite in the pathway — pathwayinfo","text":"pathwayid pathway id, hsa name","code":""},{"path":"/reference/pathwayinfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the gene and the metabolite in the pathway — pathwayinfo","text":"genes metabolites KEGG ID corresponding pathway","code":""},{"path":"/reference/pathwayinfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"the gene and the metabolite in the pathway — pathwayinfo","text":"","code":"result <- pathwayinfo(\"hsa00630\") result <- pathwayinfo(\"Glyoxylate and dicarboxylate metabolism\")"},{"path":"/reference/pdnet.html","id":null,"dir":"Reference","previous_headings":"","what":"The subnetwork's extraction — pdnet","title":"The subnetwork's extraction — pdnet","text":"subnetwork's extraction","code":""},{"path":"/reference/pdnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The subnetwork's extraction — pdnet","text":"","code":"pdnet(diff_metabolite, diff_gene, nsize = 10)"},{"path":"/reference/pdnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The subnetwork's extraction — pdnet","text":"diff_metabolite differential metabolite information, name 's kegg id diff_gene differential genes information nsize desired number nodes constrained resulting subgraph","code":""},{"path":"/reference/pdnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The subnetwork's extraction — pdnet","text":"figure","code":""},{"path":"/reference/pdnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The subnetwork's extraction — pdnet","text":"","code":"names(diff_meta)[4]  <- \"p_value\" diff_metabolite <- diff_meta %>%   dplyr::filter(adj.P.Val < 0.01) %>%   dplyr::filter(abs(logFC)>1) names(diff_gene)[4] <- \"p_value\" diff_gene1 <- diff_gene %>%   dplyr::filter(adj.P.Val < 0.01) %>%   dplyr::filter(abs(logFC)>1) a <- pdnet(diff_meta,diff_gene,nsize=100) #> Start at 2024-09-06 12:53:23 #>  #> First, fit the input p-value distribution under beta-uniform mixture model (2024-09-06 12:53:23)... #> \tA total of p-values: 17978 #> \tMaximum Log-Likelihood: 29984.0 #> \tMixture parameter (lambda): 0.109 #> \tShape parameter (a): 0.225 #> Second, determine the significance threshold (2024-09-06 12:53:23)... #> \tVia constraint on the size of subnetwork to be identified (100 nodes) #> \tScanning significance threshold at rough stage (2024-09-06 12:53:23)... #> \t\tsignificance threshold: 1.00e-11, corresponding to the network size (0 nodes) (2024-09-06 12:53:23) #> \t\tsignificance threshold: 1.00e-10, corresponding to the network size (0 nodes) (2024-09-06 12:53:23) #> \t\tsignificance threshold: 1.00e-09, corresponding to the network size (0 nodes) (2024-09-06 12:53:23) #> \t\tsignificance threshold: 1.00e-08, corresponding to the network size (1 nodes) (2024-09-06 12:53:24) #> \t\tsignificance threshold: 1.00e-07, corresponding to the network size (1 nodes) (2024-09-06 12:53:24) #> \t\tsignificance threshold: 1.00e-06, corresponding to the network size (30 nodes) (2024-09-06 12:53:24) #> \t\tsignificance threshold: 1.00e-05, corresponding to the network size (84 nodes) (2024-09-06 12:53:26) #> \t\tsignificance threshold: 1.00e-04, corresponding to the network size (198 nodes) (2024-09-06 12:53:30) #> \tScanning significance threshold at finetuning stage (2024-09-06 12:53:30)... #> \t\tsignificance threshold: 1.50e-05, corresponding to the network size (95 nodes) (2024-09-06 12:53:32) #> \t\tsignificance threshold: 2.00e-05, corresponding to the network size (96 nodes) (2024-09-06 12:53:34) #> \t\tsignificance threshold: 2.50e-05, corresponding to the network size (110 nodes) (2024-09-06 12:53:37) #> \tsignificance threshold: 2.50e-05 #> Third, calculate the scores according to the fitted BUM and FDR threshold (if any) (2024-09-06 12:53:37)... #> \tAmongst 17978 scores, there are 920 positives. #> Finally, find the subgraph from the input graph with 2796 nodes and 8507 edges (2024-09-06 12:53:37)... #> \tSize of the subgraph: 110 nodes and 156 edges #>  #> Finish at 2024-09-06 12:53:39 #> Runtime in total is: 16 secs  a <- pdnet(diff_metabolite[,8],diff_gene1[1:500,8])"},{"path":"/reference/survCli.html","id":null,"dir":"Reference","previous_headings":"","what":"The survival analysis and visualization — survCli","title":"The survival analysis and visualization — survCli","text":"survival analysis visualization","code":""},{"path":"/reference/survCli.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The survival analysis and visualization — survCli","text":"","code":"survCli(clinical_survival)"},{"path":"/reference/survCli.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The survival analysis and visualization — survCli","text":"clinical_survival data.frame must column name status, time, group","code":""},{"path":"/reference/survCli.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The survival analysis and visualization — survCli","text":"Figure","code":""},{"path":"/reference/survCli.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The survival analysis and visualization — survCli","text":"","code":"library(survival) #>  #> Attaching package: ‘survival’ #> The following object is masked from ‘package:caret’: #>  #>     cluster names(aml)[3] =\"group\" p=survCli(aml) p"},{"path":"/reference/survMet.html","id":null,"dir":"Reference","previous_headings":"","what":"The metabolites' survival analysis and visualization — survMet","title":"The metabolites' survival analysis and visualization — survMet","text":"automatic classify samples selected metabolites mean median, plot survival","code":""},{"path":"/reference/survMet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The metabolites' survival analysis and visualization — survMet","text":"","code":"survMet(   dat,   metabolites,   cluster_method = \"mean\",   out_dir = \"survival/metabolites/\" )"},{"path":"/reference/survMet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The metabolites' survival analysis and visualization — survMet","text":"dat dataframe-like data object containing log-metabolite intensity values, rows corresponding samples, columns corresponding metablites must containing time status metabolites selected metabolites used classify samples cluster_method \"mean\" \"median\",defalult \"mean\" out_dir output directory,default \"survival/metabolites\"","code":""},{"path":"/reference/survMet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The metabolites' survival analysis and visualization — survMet","text":"Figures","code":""},{"path":"/reference/survMet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The metabolites' survival analysis and visualization — survMet","text":"","code":"metabolites <- c(\"C03819\",\"C02918\",\"C03916\") survMet(dat_surv,metabolites,cluster_method=\"mean\",out_dir=\"result_v0131/survival/\") #> Warning: 'result_v0131/survival' already exists"},{"path":"/reference/xEnrichViewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to view enrichment results — xEnrichViewer","title":"Function to view enrichment results — xEnrichViewer","text":"xEnrichViewer supposed view results enrichment analysis.","code":""},{"path":"/reference/xEnrichViewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to view enrichment results — xEnrichViewer","text":"","code":"xEnrichViewer(   eTerm,   top_num = 10,   sortBy = c(\"adjp\", \"fdr\", \"pvalue\", \"zscore\", \"fc\", \"nAnno\", \"nOverlap\", \"or\", \"none\"),   decreasing = NULL,   details = FALSE )"},{"path":"/reference/xEnrichViewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to view enrichment results — xEnrichViewer","text":"eTerm object class \"eTerm\" top_num number top terms (sorted according 'sortBy' ) viewed sortBy statistics used sorting viewing gene sets (terms). can \"adjp\" \"fdr\" adjusted p value (FDR), \"pvalue\" p value, \"zscore\" enrichment z-score, \"fc\" enrichment fold change, \"nAnno\" number sets (terms), \"nOverlap\" number overlaps, \"\" odds ratio, \"none\" ordering according ID terms decreasing logical indicate whether sort decreasing order. null, true \"zscore\", \"nAnno\" \"nOverlap\"; otherwise false details logical indicate whether detailed information gene sets (terms) also viewed. default, sets false inclusion","code":""},{"path":"/reference/xEnrichViewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to view enrichment results — xEnrichViewer","text":"data frame following components: id: term ID; rownames name: term name nAnno: number members annotated term nOverlap: number overlaps fc: enrichment fold changes zscore: enrichment z-score pvalue: nominal p value adjp: adjusted p value (FDR) : vector containing odds ratio CIl: vector containing lower bound confidence interval odds ratio CIu: vector containing upper bound confidence interval odds ratio distance: term distance information; optional, appended \"details\" true members_Overlap: members (represented Gene Symbols) overlaps; optional, appended \"details\" true members_Anno: members (represented Gene Symbols) annotations; optional, appended \"details\" true","code":""},{"path":"/reference/xEnrichViewer.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Function to view enrichment results — xEnrichViewer","text":"none","code":""},{"path":[]},{"path":"/reference/xEnrichViewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to view enrichment results — xEnrichViewer","text":"","code":"RData.location <- \"http://galahad.well.ox.ac.uk/bigdata\" if (FALSE) { xEnrichViewer(eTerm) }"},{"path":"/reference/xEnricher.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to conduct enrichment analysis given the input data and the ontology and its annotation — xEnricher","title":"Function to conduct enrichment analysis given the input data and the ontology and its annotation — xEnricher","text":"xEnricher supposed conduct enrichment analysis given input data ontology direct acyclic graph (DAG) annotation. returns object class \"eTerm\". Enrichment analysis based either Fisher's exact test Hypergeometric test. test can respect hierarchy ontology.","code":""},{"path":"/reference/xEnricher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to conduct enrichment analysis given the input data and the ontology and its annotation — xEnricher","text":"","code":"xEnricher(   data,   annotation,   g,   background = NULL,   size.range = c(10, 2000),   min.overlap = 5,   which.distance = NULL,   test = c(\"fisher\", \"hypergeo\", \"binomial\"),   background.annotatable.only = NULL,   p.tail = c(\"one-tail\", \"two-tails\"),   p.adjust.method = c(\"BH\", \"BY\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\"),   ontology.algorithm = c(\"none\", \"pc\", \"elim\", \"lea\"),   elim.pvalue = 0.01,   lea.depth = 2,   path.mode = c(\"all_paths\", \"shortest_paths\", \"all_shortest_paths\"),   true.path.rule = TRUE,   verbose = TRUE )"},{"path":"/reference/xEnricher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to conduct enrichment analysis given the input data and the ontology and its annotation — xEnricher","text":"data input vector containing list genes SNPs interest annotation vertices/nodes annotation data provided. can sparse Matrix class \"dgCMatrix\" (variants/genes rows terms columns), list nodes/terms containing annotation data, object class 'GS' (basically list node/term annotation data) g object class \"igraph\" represent DAG. must node/vertice attributes: \"name\" (.e. \"Term ID\"), \"term_id\" (.e. \"Term ID\"), \"term_name\" (.e \"Term Name\") \"term_distance\" (.e. Term Distance: distance root; always 0 root ) background background vector. contains list genes SNPs test background. NULL, default annotatable used background size.range minimum maximum size members term consideration. default, sets minimum 10 2000 min.overlap minimum number overlaps. terms members overlap input data least min.overlap (3 default) processed .distance terms distance away ontology root () used restrict terms consideration. default, sets 'NULL' consider distances test test statistic used. can \"fisher\" using fisher's exact test, \"hypergeo\" using hypergeometric test, \"binomial\" using binomial test. Fisher's exact test test independence gene group (genes belonging group ) gene annotation (genes annotated term ), thus compare sampling left part background (sampling without replacement). Hypergeometric test sample random (without replacement) background containing annotated non-annotated genes, thus compare sampling background. Unlike hypergeometric test, binomial test sample random (replacement) background constant probability. terms ease finding significance, order: hypergeometric test > fisher's exact test > binomial test. words, terms calculated p-value, hypergeometric test < fisher's exact test < binomial test background.annotatable.logical indicate whether background restricted annotatable. default, NULL: ontology.algorithm 'none', always TRUE; otherwise, depends background (provided, TRUE; otherwise FALSE). Surely, can explicitly stated p.tail tail used calculate p-values. can either \"two-tails\" significance based two-tails (ie - -overrepresentation)  \"one-tail\" (default) significance based one tail (ie -representation) p.adjust.method method used adjust p-values. can one \"BH\", \"\", \"bonferroni\", \"holm\", \"hochberg\" \"hommel\". first two methods \"BH\" (widely used) \"\" control false discovery rate (FDR: expected proportion false discoveries amongst rejected hypotheses); last four methods \"bonferroni\", \"holm\", \"hochberg\" \"hommel\" designed give strong control family-wise error rate (FWER). Notes: FDR less stringent condition FWER ontology.algorithm algorithm used account hierarchy ontology. can one \"none\", \"pc\", \"elim\" \"lea\". details, please see 'Note' elim.pvalue parameter used \"ontology.algorithm\" \"elim\". used control declare signficantly enriched term (subsequently genes term eliminated ancestors) lea.depth parameter used \"ontology.algorithm\" \"lea\". used control many maximum depth used consider children term (subsequently genes children term eliminated use recalculation signifance term) path.mode mode paths induced vertices/nodes input annotation data. can \"all_paths\" possible paths root, \"shortest_paths\" one path root (node query), \"all_shortest_paths\" shortest paths root (.e. node, find shortest paths equal lengths) true.path.rule logical indicate whether true-path rule applied propagate annotations. default, sets true verbose logical indicate whether messages displayed screen. default, sets true display","code":""},{"path":"/reference/xEnricher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to conduct enrichment analysis given the input data and the ontology and its annotation — xEnricher","text":"object class \"eTerm\", list following components: term_info: matrix nTerm X 4 containing snp/gene set information, nTerm number terms, 4 columns \"id\" (.e. \"Term ID\"), \"name\" (.e. \"Term Name\"), \"namespace\" \"distance\" annotation: list terms containing annotations, term storing annotations. Always, terms identified \"id\" g: igraph object represent DAG data: vector containing input data consideration. always input data mappable retained background: vector containing background data. always input data mappable retained overlap: list overlapped snp/gene sets, storing snps/genes overlapped snp/gene set given input data (.e. snps/genes interest). Always, gene sets identified \"id\" fc: vector containing fold changes zscore: vector containing z-scores pvalue: vector containing p-values adjp: vector containing adjusted p-values. p value adjusted multiple comparisons : vector containing odds ratio CIl: vector containing lower bound confidence interval odds ratio CIu: vector containing upper bound confidence interval odds ratio cross: matrix nTerm X nTerm, -diagnal cell overlapped-members observed individaul term, -diagnal cell overlapped-members shared two terms call: call produced result","code":""},{"path":"/reference/xEnricher.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Function to conduct enrichment analysis given the input data and the ontology and its annotation — xEnricher","text":"interpretation algorithms used account hierarchy ontology : \"none\": consider ontology hierarchy . \"lea\": estimates significance term terms significance children maximum depth (e.g. 2). Precisely, snps/genes already annotated children terms signficance , snps/genes eliminated use recalculation signifance term. final p-values takes maximum original p-value recalculated p-value. \"elim\": estimates significance term terms significance children. Precisely, snps/genes already annotated signficantly enriched term cutoff e.g. pvalue<1e-2, snps/genes eliminated ancestors term). \"pc\": requires significance term using whole snps/genes background also using snps/genes annotated direct parents/ancestors background. final p-value takes maximum p-values two calculations. \"Notes\": order number significant terms : \"none\" > \"lea\" > \"elim\" > \"pc\".","code":""},{"path":[]},{"path":"/reference/xEnricher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to conduct enrichment analysis given the input data and the ontology and its annotation — xEnricher","text":"","code":"RData.location <- \"http://galahad.well.ox.ac.uk/bigdata\" if (FALSE) { # 1) SNP-based enrichment analysis using GWAS Catalog traits (mapped to EF) # 1a) ig.EF (an object of class \"igraph\" storing as a directed graph) g <- xRDataLoader('ig.EF')  # 1b) load GWAS SNPs annotated by EF (an object of class \"dgCMatrix\" storing a spare matrix) anno <- xRDataLoader(RData='GWAS2EF')  # 1c) optionally, provide the test background (if not provided, all annotatable SNPs) background <- rownames(anno)  # 1d) provide the input SNPs of interest (eg 'EFO:0002690' for 'systemic lupus erythematosus') ind <- which(colnames(anno)=='EFO:0002690') data <- rownames(anno)[anno[,ind]==1] data  # 1e) perform enrichment analysis eTerm <- xEnricher(data=data, annotation=anno, background=background, g=g, path.mode=c(\"all_paths\"))  # 1f) view enrichment results for the top significant terms xEnrichViewer(eTerm)  # 1f') save enrichment results to the file called 'EF_enrichments.txt' res <- xEnrichViewer(eTerm, top_num=length(eTerm$adjp), sortBy=\"adjp\", details=TRUE) output <- data.frame(term=rownames(res), res) utils::write.table(output, file=\"EF_enrichments.txt\", sep=\"\\t\", row.names=FALSE)  # 1g) barplot of significant enrichment results bp <- xEnrichBarplot(eTerm, top_num=\"auto\", displayBy=\"adjp\") print(bp)  # 1h) visualise the top 10 significant terms in the ontology hierarchy # color-code terms according to the adjust p-values (taking the form of 10-based negative logarithm) xEnrichDAGplot(eTerm, top_num=10, displayBy=\"adjp\", node.info=c(\"full_term_name\")) # color-code terms according to the z-scores xEnrichDAGplot(eTerm, top_num=10, displayBy=\"zscore\", node.info=c(\"full_term_name\")) }"},{"path":"/reference/xEnricherYours.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to conduct enrichment analysis given YOUR own input data — xEnricherYours","title":"Function to conduct enrichment analysis given YOUR own input data — xEnricherYours","text":"xEnricherYours supposed conduct enrichment analysis given input data ontology query. returns object class \"eTerm\". Enrichment analysis based either Fisher's exact test Hypergeometric test.","code":""},{"path":"/reference/xEnricherYours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to conduct enrichment analysis given YOUR own input data — xEnricherYours","text":"","code":"xEnricherYours(   data.file,   annotation.file,   background.file = NULL,   size.range = c(10, 2000),   min.overlap = 5,   test = c(\"fisher\", \"hypergeo\", \"binomial\"),   background.annotatable.only = NULL,   p.tail = c(\"one-tail\", \"two-tails\"),   p.adjust.method = c(\"BH\", \"BY\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\"),   verbose = T,   silent = FALSE )"},{"path":"/reference/xEnricherYours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to conduct enrichment analysis given YOUR own input data — xEnricherYours","text":"data.file input data file, containing list entities (e.g. genes SNPs) test. entities can anything, example, file http://dcgor.r-forge.r-project.org/data/InterPro/InterPro.txt, entities InterPro domains (InterPro). seen example, entries first column must domains. file also contains columns, additional columns ignored. Alternatively, data.file can matrix data frame, assuming input file read. Note: file use tab delimiter field separator columns annotation.file input annotation file containing annotations entities ontology terms. example, file containing annotations InterPro domains GO Molecular Function (GOMF) terms can found http://dcgor.r-forge.r-project.org/data/InterPro/Domain2GOMF.txt. seen example, input file must contain two columns: 1st column domains, 2nd column ontology terms. additional columns, columns ignored. Alternatively, annotation.file can matrix data frame, assuming input file read. Note: file use tab delimiter field separator columns background.file input background file containing list entities test background. file format 'data.file'. default, NULL meaning annotatable entities (.g. entities 'annotation.file') used background size.range minimum maximum size members term consideration. default, sets minimum 10 2000 min.overlap minimum number overlaps. terms members overlap input data least min.overlap (3 default) processed test test statistic used. can \"fisher\" using fisher's exact test, \"hypergeo\" using hypergeometric test, \"binomial\" using binomial test. Fisher's exact test test independence gene group (genes belonging group ) gene annotation (genes annotated term ), thus compare sampling left part background (sampling without replacement). Hypergeometric test sample random (without replacement) background containing annotated non-annotated genes, thus compare sampling background. Unlike hypergeometric test, binomial test sample random (replacement) background constant probability. terms ease finding significance, order: hypergeometric test > fisher's exact test > binomial test. words, terms calculated p-value, hypergeometric test < fisher's exact test < binomial test background.annotatable.logical indicate whether background restricted annotatable (covered 'annotation.file'). default, NULL: background provided, TRUE; otherwise FALSE. Surely, can explicitly stated. Notably, one annotation provided 'annotation.file', false (also background.file provided) p.tail tail used calculate p-values. can either \"two-tails\" significance based two-tails (ie - -overrepresentation)  \"one-tail\" (default) significance based one tail (ie -representation) p.adjust.method method used adjust p-values. can one \"BH\", \"\", \"bonferroni\", \"holm\", \"hochberg\" \"hommel\". first two methods \"BH\" (widely used) \"\" control false discovery rate (FDR: expected proportion false discoveries amongst rejected hypotheses); last four methods \"bonferroni\", \"holm\", \"hochberg\" \"hommel\" designed give strong control family-wise error rate (FWER). Notes: FDR less stringent condition FWER verbose logical indicate whether messages displayed screen. default, sets false display silent logical indicate whether messages silent completely. default, sets false. true, verbose forced false","code":""},{"path":"/reference/xEnricherYours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to conduct enrichment analysis given YOUR own input data — xEnricherYours","text":"object class \"eTerm\", list following components: term_info: matrix nTerm X 4 containing snp/gene set information, nTerm number terms, 4 columns \"id\" (.e. \"Term ID\"), \"name\" (.e. \"Term Name\"), \"namespace\" \"distance\" annotation: list terms containing annotations, term storing annotations. Always, terms identified \"id\" g: igraph object represent DAG data: vector containing input data consideration. always input data mappable retained background: vector containing background data. always input data mappable retained overlap: list overlapped snp/gene sets, storing snps overlapped snp/gene set given input data (.e. snps interest). Always, gene sets identified \"id\" fc: vector containing fold changes zscore: vector containing z-scores pvalue: vector containing p-values adjp: vector containing adjusted p-values. p value adjusted multiple comparisons : vector containing odds ratio CIl: vector containing lower bound confidence interval odds ratio CIu: vector containing upper bound confidence interval odds ratio cross: matrix nTerm X nTerm, -diagnal cell overlapped-members observed individaul term, -diagnal cell overlapped-members shared betwene two terms call: call produced result","code":""},{"path":"/reference/xEnricherYours.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Function to conduct enrichment analysis given YOUR own input data — xEnricherYours","text":"None","code":""},{"path":[]},{"path":"/reference/xEnricherYours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to conduct enrichment analysis given YOUR own input data — xEnricherYours","text":"","code":"if (FALSE) { # Load the library library(XGR) library(igraph)  # Enrichment analysis using your own data # a) provide your own data (eg InterPro domains and their annotations by GO terms) ## All InterPro domains input.file <- \"http://dcgor.r-forge.r-project.org/data/InterPro/InterPro.txt\" data <- utils::read.delim(input.file, header=F, row.names=NULL, stringsAsFactors=F)[,1] ## provide the input domains of interest (eg 100 randomly chosen domains) data.file <- sample(data, 100) ## InterPro domains annotated by GO Molecular Function (GOMF) terms annotation.file <- \"http://dcgor.r-forge.r-project.org/data/InterPro/Domain2GOMF.txt\"  # b) perform enrichment analysis eTerm <- xEnricherYours(data.file=data.file, annotation.file=annotation.file)  # c) view enrichment results for the top significant terms xEnrichViewer(eTerm)  # d) save enrichment results to the file called 'Yours_enrichments.txt' output <- xEnrichViewer(eTerm, top_num=length(eTerm$adjp), sortBy=\"adjp\", details=TRUE) utils::write.table(output, file=\"Yours_enrichments.txt\", sep=\"\\t\", row.names=FALSE)  # e) barplot of significant enrichment results bp <- xEnrichBarplot(eTerm, top_num=\"auto\", displayBy=\"adjp\") print(bp)  # Using ImmunoBase SNPs and associations/annotations with disease traits ## get ImmunoBase RData.location <- \"http://galahad.well.ox.ac.uk/bigdata/\" ImmunoBase <- xRDataLoader(RData.customised='ImmunoBase', RData.location=RData.location) ## get disease associated variants/SNPs variants_list <- lapply(ImmunoBase, function(x) cbind(SNP=names(x$variants), Disease=rep(x$disease,length(x$variants)))) ## extract annotations as a data frame: Variant Disease_Name  annotation.file <- do.call(rbind, variants_list) head(annotation.file) ## provide the input SNPs of interest ## for example, cis-eQTLs induced by interferon gamma cis <- xRDataLoader(RData.customised='JKscience_TS2A', RData.location=RData.location) data.file <- matrix(cis[which(cis$IFN_t>0),c('variant')], ncol=1) # perform enrichment analysis eTerm <- xEnricherYours(data.file=data.file, annotation.file=annotation.file) # view enrichment results for the top significant terms xEnrichViewer(eTerm) # barplot of significant enrichment results bp <- xEnrichBarplot(eTerm, top_num=\"auto\", displayBy=\"adjp\") print(bp) }"},{"path":"/reference/xgr.html","id":null,"dir":"Reference","previous_headings":"","what":"pathway analysis and visualization — xgr","title":"pathway analysis and visualization — xgr","text":"pathway analysis visualization","code":""},{"path":"/reference/xgr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pathway analysis and visualization — xgr","text":"","code":"xgr(   metabolites_keggid,   database,   p_cutoff = 0.05,   noverlap_cutoff = 0,   test = c(\"hypergeo\", \"fisher\", \"binomial\") )"},{"path":"/reference/xgr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pathway analysis and visualization — xgr","text":"metabolites_keggid metabolites's keggid database database used p_cutoff p_cutoff used declare significant terms. default, set 0.05 noverlap_cutoff noverlap_cutoff used declare number overlap. default, set 0 test test statistic used. can \"fisher\" using fisher's exact test, \"hypergeo\" using hypergeometric test, \"binomial\" using binomial test. Fisher's exact test test independence gene group (genes belonging group ) gene annotation (genes annotated term ), thus compare sampling left part background (sampling without replacement). Hypergeometric test sample random (without replacement) background containing annotated non-annotated genes, thus compare sampling background. Unlike hypergeometric test, binomial test sample random (replacement) background constant probability. terms ease finding significance, order: hypergeometric test > fisher's exact test > binomial test. words, terms calculated p-value, hypergeometric test < fisher's exact test < binomial test","code":""},{"path":"/reference/xgr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"pathway analysis and visualization — xgr","text":"pathway analysis result visualization","code":""},{"path":"/reference/xgr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"pathway analysis and visualization — xgr","text":"","code":"library(dplyr) database <- PathwayExtendData %>%       dplyr::filter(type==\"metabolite\") %>%       dplyr::select(name,kegg_pathwayname,kegg_category,type) kegg_id_need <- c(\"C05984\",\"C02494\") xgr_result <- xgr(kegg_id_need,database,p_cutoff=1.1,noverlap_cutoff=0) #> Start at 2024-09-06 12:53:45 #>  #> Warning: one argument not used by format ' #> #######################################################' #>  #> ####################################################### #> 'xEnricher' is being called (2024-09-06 12:53:45): #> Warning: one argument not used by format '#######################################################' #> ####################################################### #> First, generate a subgraph induced (via 'all_paths' mode) by the annotation data (2024-09-06 12:53:45) ... #> Next, prepare enrichment analysis (2024-09-06 12:53:45) ... #> \tThere are 1 genes/SNPs of interest tested against 3047 genes/SNPs as the background (annotatable only? TRUE) (2024-09-06 12:53:45) #> Third, perform enrichment analysis using 'hypergeo' test (2024-09-06 12:53:45) ... #> \tThere are 81 terms being used, each restricted within [1,2000] annotations #> Last, adjust the p-values for 81 terms (with 0 minimum overlaps) using the BH method (2024-09-06 12:53:45) ... #> Warning: one argument not used by format '#######################################################' #> ####################################################### #> 'xEnricher' has been finished (2024-09-06 12:53:45)! #> Warning: one argument not used by format '####################################################### #> ' #> ####################################################### #>  #> End at 2024-09-06 12:53:45 #> Runtime in total (xEnricherYours): 0 secs result <- xgr(kegg_id_need,PathwayExtendData,p_cutoff=1.1,noverlap_cutoff= 0) #> Start at 2024-09-06 12:53:45 #>  #> Warning: one argument not used by format ' #> #######################################################' #>  #> ####################################################### #> 'xEnricher' is being called (2024-09-06 12:53:45): #> Warning: one argument not used by format '#######################################################' #> ####################################################### #> First, generate a subgraph induced (via 'all_paths' mode) by the annotation data (2024-09-06 12:53:45) ... #> Next, prepare enrichment analysis (2024-09-06 12:53:46) ... #> Warning: one argument not used by format '#######################################################' #> ####################################################### #> 'xEnricher' has been finished (2024-09-06 12:53:46)! #> Warning: one argument not used by format '####################################################### #> ' #> ####################################################### #>  #> End at 2024-09-06 12:53:46 #> Runtime in total (xEnricherYours): 1 secs #> Error in UseMethod(\"filter\"): no applicable method for 'filter' applied to an object of class \"NULL\" xgr_result$output #> # A tibble: 1 × 14 #>   name       nAnno nOverlap    fc zscore pvalue  adjp    or   CIl   CIu distance #>   <chr>      <dbl>    <dbl> <dbl>  <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <chr>    #> 1 Propanoat…    40        1  76.2   8.67      0     0   Inf  1.93   Inf 1        #> # ℹ 3 more variables: namespace <chr>, members_Overlap <chr>, #> #   members_Anno <chr> xgr_result$gp"}]
